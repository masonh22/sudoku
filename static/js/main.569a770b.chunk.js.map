{"version":3,"sources":["serviceWorker.js","sudoku.ts","App.js","index.js"],"names":["Boolean","window","location","hostname","match","checkUpdate","nums","p","i","j","row","Math","floor","col","boxTop","boxLeft","elts","includes","push","bfSteps","givens","bfStepsHelper","acc","has","newNums","slice","ret","makeGivens","Set","length","add","puzzles","puzzle","solution","Array","fill","classNames","obj","str","property","NoteSquare","props","className","show","key","val","Square","notes","this","selected","value","given","onClick","renderNotes","React","Component","Board","squares","squareClick","rows","renderSquare","makeRows","Game","state","history","stepNumber","noteMode","keyIn","bind","setState","console","log","newStep","e","isNaN","parseInt","code","concat","notesClick","algorithm","solved","setTimeout","playback","setInterval","clearInterval","addEventListener","removeEventListener","undoClick","clear","bfSolveSteps","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.569a770b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\r\n * This file is for Sudoku algorithms. A Sudoku board is represented\r\n * as a reference that contains one list with the indices of all given\r\n * numbers and another that represents the values in each position\r\n */\r\n\r\n//Checks whether a board is still correct after updating at position [i]\r\nconst checkUpdate: (nums: number[], p: number) => boolean =\r\n  (nums: number[], p: number) => {\r\n    const row = Math.floor(p / 9);\r\n    const col = p % 9;\r\n    const boxTop = row < 3 ? 0 : row < 6 ? 3 : 6;\r\n    const boxLeft = col < 3 ? 0 : col < 6 ? 3 : 6;\r\n    let elts: number[] = [];\r\n    let i: number;\r\n    let j: number;\r\n    //Check row\r\n    for (i = row * 9; i < row * 9 + 9; i++) {\r\n      if (nums[i] !== 0) {\r\n        if (elts.includes(nums[i])) {\r\n          return false;\r\n        }\r\n        elts.push(nums[i]);\r\n      }\r\n    }\r\n    elts = [];\r\n    //Check col\r\n    for (i = col; i < 81; i = i + 9) {\r\n      if (nums[i] !== 0) {\r\n        if (elts.includes(nums[i])) {\r\n          return false;\r\n        }\r\n        elts.push(nums[i]);\r\n      }\r\n    }\r\n    elts = [];\r\n    //Check box\r\n    for (i = boxTop * 9; i < boxTop * 9 + 27; i = i + 9) {\r\n      for (j = boxLeft; j < boxLeft + 3; j++) {\r\n        if (nums[i + j] !== 0) {\r\n          if (elts.includes(nums[i + j])) {\r\n            return false;\r\n          }\r\n          elts.push(nums[i + j]);\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n// Add comment maybe\r\nconst bfStepsHelper: (nums: number[], givens: Set<number>,\r\n  i: number, acc: number[][]) => number[][] =\r\n  (nums, givens, i, acc: number[][]) => {\r\n    if (i > 80) {\r\n      return acc;\r\n\r\n    } else if (givens.has(i)) {\r\n      //If the cell is given, skip\r\n      return bfStepsHelper(nums, givens, i + 1, acc);\r\n\r\n    } else if (nums[i] !== 9) {\r\n      //As long as the current number is not 9, we try the next number\r\n      const newNums = nums.slice()\r\n      newNums[i] = newNums[i] + 1;\r\n      acc.push(newNums);\r\n      if (!checkUpdate(newNums, i)) {\r\n        //If the new number does not work\r\n        return bfStepsHelper(newNums, givens, i, acc);\r\n      }\r\n      const ret = bfStepsHelper(newNums, givens, i + 1, acc);\r\n      if (ret === null) {\r\n        return bfStepsHelper(newNums, givens, i, acc);\r\n      }\r\n      return ret;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n// Outputs an array containing each step in order\r\nconst bfSteps: (nums: number[], givens: Set<number>) => number[][] =\r\n  (nums, givens) => bfStepsHelper(nums, givens, 0, [])\r\n\r\n// For now, this assumes that the board has only the given numbers\r\nconst bfHelper: (nums: number[], givens: Set<number>, i: number)\r\n  => number[][] =\r\n  (nums, givens, i: number) => {\r\n    if (i > 80) {\r\n      return [nums];\r\n\r\n    } else if (givens.has(i)) {\r\n      //If the cell is given, skip\r\n      return bfHelper(nums, givens, i + 1);\r\n\r\n    } else if (nums[i] !== 9) {\r\n      //At this point, we are going to mutate the board. Instead, we want to create a new one and modify that\r\n      const newNums = nums.slice();\r\n      //As long as the current number is not 9, we try the next number\r\n      newNums[i] = newNums[i] + 1;\r\n      if (!checkUpdate(newNums, i)) {\r\n        //If the new number does not work\r\n        return bfHelper(newNums, givens, i);\r\n      } else {\r\n        const ret = bfHelper(newNums, givens, i + 1);\r\n        if (ret === null) {\r\n          return bfHelper(newNums, givens, i);\r\n        } else {\r\n          return ret;\r\n        }\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\nconst bruteForce: (nums: number[], givens: Set<number>) => number[][] =\r\n  (nums, givens) => bfHelper(nums, givens, 0);\r\n\r\nconst makeGivens: (nums: number[]) => Set<number> = (nums: number[]) => {\r\n  const givens: Set<number> = new Set();\r\n  for (let i = 0; i < nums.length; i++) {\r\n    if (nums[i] !== 0) {\r\n      givens.add(i);\r\n    }\r\n  }\r\n  return givens;\r\n}\r\n\r\nexport { bruteForce, bfSteps, makeGivens };\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { makeGivens, bfSteps, bruteForce } from './sudoku.ts';\r\n\r\nconst puzzles = [\r\n  {\r\n    puzzle: [0, 0, 4, 3, 0, 0, 2, 0, 9, 0, 0, 5, 0, 0, 9, 0, 0, 1, 0, 7, 0, 0, 6, 0, 0, 4, 3, 0, 0, 6, 0, 0, 2, 0, 8, 7, 1, 9, 0, 0, 0, 7, 4, 0, 0, 0, 5, 0, 0, 8, 3, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 3, 5, 0, 8, 6, 9, 0, 0, 4, 2, 9, 1, 0, 3, 0, 0],\r\n    solution: [8, 6, 4, 3, 7, 1, 2, 5, 9, 3, 2, 5, 8, 4, 9, 7, 6, 1, 9, 7, 1, 2, 6, 5, 8, 4, 3, 4, 3, 6, 1, 9, 2, 5, 8, 7, 1, 9, 8, 6, 5, 7, 4, 3, 2, 2, 5, 7, 4, 8, 3, 9, 1, 6, 6, 8, 9, 7, 3, 4, 1, 2, 5, 7, 1, 3, 5, 2, 8, 6, 9, 4, 5, 4, 2, 9, 1, 6, 3, 7, 8],\r\n  },\r\n  {\r\n    puzzle: [0, 4, 0, 1, 0, 0, 0, 5, 0, 1, 0, 7, 0, 0, 3, 9, 6, 0, 5, 2, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 0, 9, 0, 6, 8, 0, 0, 8, 0, 3, 0, 5, 0, 6, 2, 0, 0, 9, 0, 0, 6, 0, 5, 4, 3, 6, 0, 0, 0, 8, 0, 7, 0, 0, 2, 5, 0, 0, 9, 7, 1, 0, 0],\r\n    solution: [3, 4, 6, 1, 7, 9, 2, 5, 8, 1, 8, 7, 5, 2, 3, 9, 6, 4, 5, 2, 9, 6, 4, 8, 3, 7, 1, 9, 6, 5, 8, 3, 2, 4, 1, 7, 4, 7, 2, 9, 1, 6, 8, 3, 5, 8, 1, 3, 7, 5, 4, 6, 2, 9, 7, 9, 8, 2, 6, 1, 5, 4, 3, 6, 3, 1, 4, 8, 5, 7, 9, 2, 2, 5, 4, 3, 9, 7, 1, 8, 6],\r\n  },\r\n  {\r\n    puzzle: Array(81).fill(0),\r\n    solution: Array(81).fill(0),\r\n  }\r\n];\r\n\r\nconst classNames = obj => {\r\n  let str = '';\r\n  for (let property in obj) {\r\n    if (obj[property]) {\r\n      str += property + ' ';\r\n    }\r\n  }\r\n  return str;\r\n}\r\n\r\nconst NoteSquare = props => (\r\n  <div\r\n    className={classNames({\r\n      'cell': true,\r\n      'show': !props.show,\r\n    })}\r\n    key={props.val}>\r\n    {props.val}\r\n  </div>\r\n);\r\n\r\nclass Square extends React.Component {\r\n\r\n  renderNotes() {\r\n    let notes = [];\r\n    for (let i = 1; i < 10; i++) {\r\n      notes.push(<NoteSquare val={i} show={this.props.notes[i - 1]} />)\r\n    }\r\n    return <div className=\"grid\">{notes}</div>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <td\r\n        className={classNames({\r\n          'square-selected': this.props.selected,\r\n          'incorrect': this.props.value !== this.props.solution,\r\n          'given': this.props.given,\r\n        })}\r\n        onClick={this.props.onClick}\r\n        key={this.props.val}>\r\n        {this.props.value === 0 ? this.renderNotes() : this.props.value}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        given={this.props.givens.has(i)}\r\n        solution={this.props.solution[i]}\r\n        selected={this.props.selected === i}\r\n        notes={this.props.notes[i]}\r\n        onClick={() => this.props.squareClick(i)}\r\n        val={i} />\r\n    );\r\n  }\r\n\r\n  makeRows() {\r\n    const rows = [];\r\n    for (var i = 0; i < 9; i++) {\r\n      const row = [];\r\n      for (var j = 0; j < 9; j++) {\r\n        row.push(this.renderSquare(i * 9 + j));\r\n      }\r\n      rows.push(<tr key={i}>{row}</tr>);\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <table className=\"board\">\r\n          <tbody>\r\n            {this.makeRows()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let notes = Array(81).fill(null);\r\n    for (let i = 0; i < 81; i++) {\r\n      notes[i] = Array(9).fill(false);\r\n    }\r\n    this.state = {\r\n      history: [puzzles[0].puzzle],\r\n      solution: puzzles[0].solution,\r\n      givens: makeGivens(puzzles[0].puzzle),\r\n      notes: notes,\r\n      selected: 0,\r\n      stepNumber: 0,\r\n      noteMode: false,\r\n    };\r\n    this.keyIn = this.keyIn.bind(this);\r\n  }\r\n\r\n  squareClick(i) {\r\n    this.setState({\r\n      selected: i,\r\n    });\r\n  }\r\n\r\n  undoClick() {\r\n    console.log('undo');\r\n    this.setState(state => {\r\n      const newStep = state.stepNumber === 0 ? 0 : state.stepNumber - 1;\r\n      return {\r\n        stepNumber: newStep,\r\n        history: state.history.slice(0, newStep + 1),\r\n      }\r\n    });\r\n  }\r\n\r\n  keyIn(e) {\r\n    if (!e) {\r\n      return;\r\n    }\r\n    if (!isNaN(parseInt(e.key)) && e.code !== 'Digit0' && this.state.history[0][this.state.selected] === 0) {//Update this later\r\n      console.log('key in');\r\n      this.setState(state => {\r\n        if (state.noteMode) {\r\n          const notes = state.notes.slice();\r\n          notes[state.selected][parseInt(e.key) - 1] = !notes[state.selected][parseInt(e.key) - 1]\r\n          return {\r\n            notes: notes,\r\n          }\r\n        } else {\r\n          const squares = state.history[state.stepNumber].slice();\r\n          squares[state.selected] = parseInt(e.key);\r\n          return {\r\n            history: state.history.concat([squares]),\r\n            stepNumber: state.stepNumber + 1,\r\n          };\r\n        }\r\n      });\r\n    } else if (e.key === 'Backspace') {\r\n      this.setState(state => {\r\n        const squares = state.history[state.stepNumber].slice();\r\n        squares[state.selected] = 0;\r\n        return {\r\n          history: state.history.concat([squares]),\r\n          stepNumber: state.stepNumber + 1,\r\n        }\r\n      });\r\n    } else if (e.key === 'ArrowRight') {\r\n      this.setState(state => {\r\n        if (state.selected % 9 !== 8) {\r\n          return {\r\n            selected: state.selected + 1,\r\n          }\r\n        }\r\n        return {};\r\n      });\r\n    } else if (e.key === 'ArrowLeft') {\r\n      this.setState(state => {\r\n        if (state.selected % 9 !== 0) {\r\n          return {\r\n            selected: state.selected - 1,\r\n          }\r\n        }\r\n        return {};\r\n      });\r\n    } else if (e.key === 'ArrowUp') {\r\n      this.setState(state => {\r\n        if (state.selected / 9 !== 0) {\r\n          return {\r\n            selected: state.selected - 9,\r\n          }\r\n        }\r\n        return {};\r\n      });\r\n    } else if (e.key === 'ArrowDown') {\r\n      this.setState(state => {\r\n        if (state.selected / 9 !== 8) {\r\n          return {\r\n            selected: state.selected + 9,\r\n          }\r\n        }\r\n        return {};\r\n      });\r\n    } else if (e.code === 'Space') {\r\n      this.notesClick();\r\n    }\r\n  }\r\n\r\n  notesClick() {\r\n    this.setState(state => ({\r\n      noteMode: !state.noteMode\r\n    }));\r\n  }\r\n\r\n  solve(algorithm) {\r\n    console.log('solving');\r\n    const solved = algorithm(this.state.history[this.state.stepNumber],\r\n      this.state.givens)\r\n    this.setState(state => ({\r\n      history: state.history.concat(solved),\r\n      stepNumber: state.stepNumber + solved.length,\r\n    }));\r\n  }\r\n\r\n  bfSolveSteps() {\r\n    const solved = bfSteps(this.state.history[this.state.stepNumber],\r\n      this.state.givens)\r\n    if (solved === null) {\r\n      return;\r\n    }\r\n    this.setState(state => ({\r\n      history: state.history.concat(solved)\r\n    }));\r\n    setTimeout(() => {\r\n      let i = 0;\r\n      let playback = setInterval(() => {\r\n        this.setState({\r\n          stepNumber: i,\r\n        });\r\n        i++;\r\n        if (i === this.state.history.length) {\r\n          clearInterval(playback);\r\n        }\r\n      }, 1)\r\n    }, 100)\r\n  }\r\n\r\n  clear() {\r\n    this.setState(state => ({\r\n      history: state.history.slice(0, 1),\r\n      selected: null,\r\n      stepNumber: 0,\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.keyIn);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.keyIn);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={this.state.history[this.state.stepNumber]}\r\n            solution={this.state.solution}\r\n            givens={this.state.givens}\r\n            selected={this.state.selected}\r\n            notes={this.state.notes}\r\n            squareClick={(i) => this.squareClick(i)}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"undo\"\r\n          onClick={() => this.undoClick()}>\r\n          Undo\r\n        </button>\r\n        <button\r\n          className=\"clear\"\r\n          onClick={() => this.clear()}>\r\n          Clear\r\n        </button>\r\n        <button\r\n          className=\"notes\"\r\n          onClick={() => this.notesClick()}>\r\n          Notes\r\n        </button>\r\n        <button\r\n          className=\"solve\"\r\n          onClick={() => this.bfSolveSteps()}>\r\n          Solve\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}