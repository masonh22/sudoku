{"version":3,"sources":["serviceWorker.js","sudoku.ts","data.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","bfHelper","nums","givens","i","acc","solution","steps","has","newNums","slice","push","notes","index","num","old","p","j","row","Math","floor","col","boxTop","boxLeft","checkUpdate","ret","bruteForce","subtract","s1","s2","diff","Set","e","delete","union","un","add","updateNotes","val","smartFill","smallest","size","keys","next","value","newNotes","l","r","Array","fill","length","copySetArray","smartBruteForce","sets","possibleNums","box","makeNotes","makeGivens","puzzles","puzzle","classNames","obj","str","property","NoteSquare","props","className","show","key","Square","this","selected","given","onClick","renderNotes","React","Component","Board","squares","squareClick","rows","renderSquare","makeRows","Game","choice","random","state","history","puzzleNum","emptyNotes","stepNumber","noteMode","keyIn","bind","algorithm","solved","console","log","setState","concat","setTimeout","playback","setInterval","clearInterval","code","notesClick","isNaN","parseInt","newStep","hist","addEventListener","removeEventListener","undoClick","reset","randomPuzzle","clear","solveSteps","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1f,CAAEqD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIrD,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KC7CtfsD,EAAa,SAAAC,GACjB,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAYF,EACfA,EAAIE,KACND,GAAOC,EAAW,KAGtB,OAAOD,GAGHE,EAAa,SAAAC,GAAK,OACtB,yBACEC,UAAWN,EAAW,CACpB,MAAQ,EACR,MAASK,EAAME,OAEjBC,IAAKH,EAAM3B,KACV2B,EAAM3B,MAIL+B,E,4KAIF,IADA,IAAIzD,EAAQ,GACHR,EAAI,EAAGA,EAAI,GAAIA,IACtBQ,EAAMD,KAAK,kBAAC,EAAD,CAAY2B,IAAKlC,EAAG+D,KAAMG,KAAKL,MAAMrD,MAAMR,EAAI,MAE5D,OAAO,yBAAK8D,UAAU,QAAQtD,K,+BAI9B,OACE,wBACEsD,UAAWN,EAAW,CACpB,kBAAmBU,KAAKL,MAAMM,SAC9B,UAAaD,KAAKL,MAAMrB,QAAU0B,KAAKL,MAAM3D,SAC7C,MAASgE,KAAKL,MAAMO,QAEtBC,QAASH,KAAKL,MAAMQ,QACpBL,IAAKE,KAAKL,MAAM3B,KACM,IAArBgC,KAAKL,MAAMrB,MAAc0B,KAAKI,cAAgBJ,KAAKL,MAAMrB,W,GApB7C+B,IAAMC,WA0BrBC,E,2KAESzE,GAAI,IAAD,OACd,OACE,kBAAC,EAAD,CACEwC,MAAO0B,KAAKL,MAAMa,QAAQ1E,GAC1BoE,MAAOF,KAAKL,MAAM9D,OAAOK,IAAIJ,GAC7BE,SAAUgE,KAAKL,MAAM3D,SAASF,GAC9BmE,SAAUD,KAAKL,MAAMM,WAAanE,EAClCQ,MAAO0D,KAAKL,MAAMrD,MAAMR,GACxBqE,QAAS,kBAAM,EAAKR,MAAMc,YAAY3E,IACtCkC,IAAKlC,M,iCAMT,IADA,IAAM4E,EAAO,GACJ5E,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAMc,EAAM,GACHD,EAAI,EAAGA,EAAI,EAAGA,IACrBC,EAAIP,KAAK2D,KAAKW,aAAiB,EAAJ7E,EAAQa,IAErC+D,EAAKrE,KAAK,wBAAIyD,IAAKhE,GAAIc,IAEzB,OAAO8D,I,+BAIP,OACE,yBAAKd,UAAU,kBACb,2BAAOA,UAAU,SACf,+BACGI,KAAKY,kB,GAhCEP,IAAMC,WAwCpBO,E,kDAEJ,WAAYlB,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IADA,IAAIrD,EAAQoC,MAAM,IAAIC,KAAK,MAClB7C,EAAI,EAAGA,EAAI,GAAIA,IACtBQ,EAAMR,GAAK4C,MAAM,GAAGC,MAAK,GAE3B,IAAMmC,EAASjE,KAAKC,MAAMD,KAAKkE,SAAW3B,EAAQR,QANjC,OAUjB,EAAKoC,MAAQ,CACXC,QAAS,GACT5B,OAAQD,EAAQ0B,GAAQzB,OAAOjD,QAC/BP,OAAQsD,EAAWC,EAAQ0B,GAAQzB,QACnCrD,SAAUoD,EAAQ0B,GAAQ9E,SAC1BkF,UAAWJ,EACXxE,MAAO,EAAK6E,aACZlB,SAAU,EACVmB,WAAY,EACZC,UAAU,GAEZ,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBArBI,E,yDA0BjB,IADA,IAAIjF,EAAQoC,MAAM,IAAIC,KAAK,MAClB7C,EAAI,EAAGA,EAAI,GAAIA,IACtBQ,EAAMR,GAAK4C,MAAM,GAAGC,MAAK,GAE3B,OAAOrC,I,iCAGEkF,GAAY,IAAD,OACdC,EAASD,EAAUxB,KAAKgB,MAAM3B,OAAOjD,QACzC4D,KAAKgB,MAAMnF,QACE,OAAX4F,IAGJC,QAAQC,IAAI,UAAYF,EAAOxF,MAAM2C,QACrCoB,KAAK4B,UAAS,SAAAZ,GAAK,MAAK,CACtBC,QAASD,EAAMC,QAAQY,OAAOJ,EAAOxF,OACrCD,SAAUyF,EAAOzF,SACjBiE,SAAU,SAEZ6B,YAAW,WACT,IAAIhG,EAAI,EACJiG,EAAWC,aAAY,WACzB,EAAKJ,UAAS,SAAAZ,GACZ,IAAMC,EAAUD,EAAMC,QAAQnF,GAE9B,OADAkF,EAAM3B,OAAO4B,EAAQ1E,OAAS0E,EAAQzE,IAC/B,CACL4E,WAAYtF,EAAI,QAGpBA,IACU,EAAKkF,MAAMC,QAAQrC,QAC3BqD,cAAcF,KAEf,KACF,Q,kCAGOjG,GACVkE,KAAK4B,SAAS,CACZ3B,SAAUnE,M,4BAIR4B,GACCA,IAEiB,UAAXA,EAAEwE,KACXlC,KAAKmC,aAELnC,KAAK4B,UAAS,SAAAZ,GACZ,IAAKoB,MAAMC,SAAS3E,EAAEoC,OAAoB,WAAXpC,EAAEwE,OAAsBlB,EAAMnF,OAAOK,IAAI8E,EAAMf,UAAW,CACvF,IAAMzD,EAAM6F,SAAS3E,EAAEoC,KACvB,GAAIkB,EAAMK,SAER,OADAL,EAAM1E,MAAM0E,EAAMf,UAAUzD,EAAM,IAAMwE,EAAM1E,MAAM0E,EAAMf,UAAUzD,EAAM,GACnE,CACLyE,QAASD,EAAMC,QAAQY,OAAO,CAAC,CAAEvF,OAAO,EAAMC,MAAOyE,EAAMf,SAAUzD,IAAK,CAACA,MAC3E4E,WAAYJ,EAAMI,WAAa,GAG7BJ,EAAME,UAAY,GAAGF,EAAMnF,OAAOiC,IAAIkD,EAAMf,UAChD,IAAMxD,EAAMuE,EAAM3B,OAAO2B,EAAMf,UAE/B,OADAe,EAAM3B,OAAO2B,EAAMf,UAAYzD,EACxB,CACLyE,QAASD,EAAMC,QAAQY,OAAO,CAAC,CAAEvF,OAAO,EAAOC,MAAOyE,EAAMf,SAAUzD,IAAKA,EAAKC,IAAKA,KACrF2E,WAAYJ,EAAMI,WAAa,GAG9B,GAAc,cAAV1D,EAAEoC,KACX,IAAKkB,EAAMnF,OAAOK,IAAI8E,EAAMf,WAAae,EAAME,UAAY,EAAG,CAC5D,GAAqC,IAAjCF,EAAM3B,OAAO2B,EAAMf,UAAiB,CAEtC,IADA,IAAMrE,EAAO,GACJE,EAAI,EAAGA,EAAI,EAAGA,IACjBkF,EAAM1E,MAAM0E,EAAMf,UAAUnE,IAAIF,EAAKS,KAAKP,EAAI,GAGpD,OADAkF,EAAM1E,MAAM0E,EAAMf,UAAYvB,MAAM,GAAGC,MAAK,GACrC,CACLsC,QAASD,EAAMC,QAAQY,OAAO,CAAC,CAAEvF,OAAO,EAAMC,MAAOyE,EAAMf,SAAUzD,IAAKZ,KAC1EwF,WAAYJ,EAAMI,WAAa,GAGjCJ,EAAMnF,OAAO8B,OAAOqD,EAAMf,UAC1B,IAAMxD,EAAMuE,EAAM3B,OAAO2B,EAAMf,UAE/B,OADAe,EAAM3B,OAAO2B,EAAMf,UAAY,EACxB,CACLgB,QAASD,EAAMC,QAAQY,OAAO,CAAC,CAAEvF,OAAO,EAAOC,MAAOyE,EAAMf,SAAUzD,IAAK,EAAGC,IAAKA,KACnF2E,WAAYJ,EAAMI,WAAa,QAIhC,IAAc,eAAV1D,EAAEoC,IACX,OAAIkB,EAAMf,SAAW,IAAM,EAClB,CACLA,SAAUe,EAAMf,SAAW,GAGxB,GACF,GAAc,cAAVvC,EAAEoC,IACX,OAAIkB,EAAMf,SAAW,IAAM,EAClB,CACLA,SAAUe,EAAMf,SAAW,GAGxB,GACF,GAAc,YAAVvC,EAAEoC,IACX,OAAuC,IAAnCjD,KAAKC,MAAMkE,EAAMf,SAAW,GACvB,CACLA,SAAUe,EAAMf,SAAW,GAGxB,GACF,GAAc,cAAVvC,EAAEoC,IACX,OAAuC,IAAnCjD,KAAKC,MAAMkE,EAAMf,SAAW,GACvB,CACLA,SAAUe,EAAMf,SAAW,GAGxB,U,kCAObD,KAAK4B,UAAS,SAAAZ,GACZ,GAAyB,IAArBA,EAAMI,WAAV,CACA,IAAMkB,EAAUtB,EAAMI,WAAa,EAC7BmB,EAAOvB,EAAMC,QAAQqB,GAC3B,GAAIC,EAAKjG,MAAO,CAAC,IAAD,gBACAiG,EAAK/F,KADL,IACd,2BAAwB,CAAC,IAAhBV,EAAe,QACtBkF,EAAM1E,MAAMiG,EAAKhG,OAAOT,EAAI,IAAMkF,EAAM1E,MAAMiG,EAAKhG,OAAOT,EAAI,IAFlD,oCAKVkF,EAAME,UAAY,GAAkB,IAAbqB,EAAK9F,KAAWuE,EAAMnF,OAAO8B,OAAO4E,EAAKhG,OACpEmF,QAAQC,IAAIY,EAAK9F,KACjBuE,EAAM3B,OAAOkD,EAAKhG,OAASgG,EAAK9F,IAElC,MAAO,CACL2E,WAAYkB,EACZrB,QAASD,EAAMC,QAAQ7E,MAAM,EAAGkG,U,8BAK7B,IAAD,OACNtC,KAAK4B,UAAS,SAAAZ,GACZ,GAAIA,EAAME,UAAY,EAAG,CACvB,IADuB,EACjB7B,EAASX,MAAM,IAAIC,KAAK,GADP,cAETqC,EAAMnF,OAAOuC,QAFJ,IAEvB,2BAAmC,CAAC,IAA3BtC,EAA0B,QACjCuD,EAAOvD,GAAKkF,EAAM3B,OAAOvD,IAHJ,8BAKvB,MAAO,CACLmF,QAAS,GACT5B,OAAQA,EACRrD,SAAUqD,EACV6B,WAAY,EACZ5E,MAAO,EAAK6E,aACZlB,SAAU,EACVmB,WAAY,EACZC,UAAU,GAGZ,MAAO,CACLJ,QAAS,GACT5B,OAAQD,EAAQ4B,EAAME,WAAW7B,OAAOjD,QACxCE,MAAO,EAAK6E,aACZlB,SAAU,EACVmB,WAAY,EACZC,UAAU,Q,mCAOhBrB,KAAK4B,UAAS,SAAAZ,GAAK,MAAK,CACtBK,UAAWL,EAAMK,e,qCAIL,IAAD,OACPP,EAASjE,KAAKC,MAAMD,KAAKkE,SAAW3B,EAAQR,QAClDoB,KAAK4B,UAAS,SAAAZ,GAAK,MAAK,CACtBC,QAAS,GACT5B,OAAQD,EAAQ0B,GAAQzB,OAAOjD,QAC/BP,OAAQsD,EAAWC,EAAQ0B,GAAQzB,QACnCrD,SAAUoD,EAAQ0B,GAAQ9E,SAC1BkF,UAAWJ,EACXxE,MAAO,EAAK6E,aACZlB,SAAU,EACVmB,WAAY,EACZC,UAAU,Q,8BAIL,IAAD,OACNrB,KAAK4B,UAAS,SAAAZ,GACZ,IAAM3B,EAASX,MAAM,IAAIC,KAAK,GAC9B,MAAO,CACLsC,QAAS,GACT5B,OAAQA,EACRxD,OAAQ,IAAI4B,IACZzB,SAAUqD,EACV6B,WAAY,EACZ5E,MAAO,EAAK6E,aACZlB,SAAU,EACVmB,WAAY,EACZC,UAAU,Q,0CAMd9F,OAAOiH,iBAAiB,UAAWxC,KAAKsB,S,6CAIxC/F,OAAOkH,oBAAoB,UAAWzC,KAAKsB,S,+BAGnC,IAAD,OACP,OACE,yBAAK1B,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEY,QAASR,KAAKgB,MAAM3B,OACpBrD,UAC4B,IAA1BgE,KAAKgB,MAAME,UAAmBlB,KAAKgB,MAAMhF,SACvCoD,EAAQY,KAAKgB,MAAME,WAAWlF,SAClCH,OAAQmE,KAAKgB,MAAMnF,OACnBoE,SAAUD,KAAKgB,MAAMf,SACrB3D,MAAO0D,KAAKgB,MAAM1E,MAClBmE,YAAa,SAAC3E,GAAD,OAAO,EAAK2E,YAAY3E,OAGzC,yBAAK8D,UAAU,WACb,4BACEA,UAAU,OACVO,QAAS,kBAAM,EAAKuC,cAFtB,QAKA,4BACE9C,UAAU,QACVO,QAAS,kBAAM,EAAKwC,UAFtB,SAKA,4BACE/C,UAAU,QACVO,QAAS,kBAAM,EAAKgC,eAFtB,SAKA,4BACEvC,UAAU,SACVO,QAAS,kBAAM,EAAKyC,iBAFtB,iBAKA,4BACEhD,UAAU,QACVO,QAAS,kBAAM,EAAK0C,UAFtB,SAKA,4BACEjD,UAAU,UACVO,QAAS,kBAAM,EAAK2C,WAAW1F,KAFjC,qBAKA,4BACEwC,UAAU,aACVO,QAAS,kBAAM,EAAK2C,WAAWhE,KAFjC,2B,GApSSuB,IAAMC,WAuTVyC,MARf,WACE,OACE,yBAAKnD,UAAU,OACb,kBAAC,EAAD,QCxYNoD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SJ2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjC,QAAQiC,MAAMA,EAAMC,a","file":"static/js/main.2b230a65.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\r\n * This file is for Sudoku algorithms. A Sudoku board is represented\r\n * as a reference that contains one list with the indices of all given\r\n * numbers and another that represents the values in each position\r\n */\r\n\r\ninterface step {\r\n  notes: boolean,\r\n  index: number,\r\n  num: number,\r\n  old: number,\r\n}\r\n\r\ninterface solution {\r\n  solution: number[],\r\n  steps: Array<step>,\r\n}\r\n\r\n/**\r\n * Checks whether a board is still correct after updating at position [p]\r\n * @param nums Sudoku board\r\n * @param p Updated value index\r\n */\r\nconst checkUpdate: (nums: number[], p: number) => boolean =\r\n  (nums: number[], p: number) => {\r\n    const row = Math.floor(p / 9);\r\n    const col = p % 9;\r\n    const boxTop = row < 3 ? 0 : row < 6 ? 3 : 6;\r\n    const boxLeft = col < 3 ? 0 : col < 6 ? 3 : 6;\r\n    let i: number;\r\n    let j: number;\r\n    //Check row\r\n    for (i = row * 9; i < row * 9 + 9; i++) {\r\n      if (nums[i] === nums[p] && i !== p) {\r\n        return false;\r\n      }\r\n    }\r\n    //Check col\r\n    for (i = col; i < 81; i = i + 9) {\r\n      if (nums[i] === nums[p] && i !== p) {\r\n        return false;\r\n      }\r\n    }\r\n    //Check box\r\n    for (i = boxTop * 9; i < boxTop * 9 + 27; i = i + 9) {\r\n      for (j = boxLeft; j < boxLeft + 3; j++) {\r\n        if (nums[i + j] === nums[p] && i + j !== p) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\nconst bfHelper: (nums: number[], givens: Set<number>,\r\n  i: number, acc: Array<step>) => solution = (nums, givens, i, acc) => {\r\n    if (i > 80) {\r\n      return { solution: nums, steps: acc };\r\n\r\n    } else if (givens.has(i)) {\r\n      //If the cell is given, skip\r\n      return bfHelper(nums, givens, i + 1, acc);\r\n\r\n    } else if (nums[i] !== 9) {\r\n      //As long as the current number is not 9, we try the next number\r\n      const newNums = nums.slice()\r\n      newNums[i] = newNums[i] + 1;\r\n      acc.push({ notes: false, index: i, num: newNums[i], old: newNums[i] - 1 })\r\n      if (!checkUpdate(newNums, i)) {\r\n        //If the new number does not work\r\n        return bfHelper(newNums, givens, i, acc);\r\n      }\r\n      const ret = bfHelper(newNums, givens, i + 1, acc);\r\n      if (ret === null) {\r\n        return bfHelper(newNums, givens, i, acc);\r\n      }\r\n      return ret;\r\n    } else {\r\n      acc.push({ notes: false, index: i, num: 0, old: 9 });\r\n      return null;\r\n    }\r\n  }\r\n\r\n/**\r\n * Solves sudoku board [nums] using a brute force method\r\n * @param nums Sudoku board\r\n * @param givens Indices of hints on [nums]\r\n */\r\nconst bruteForce: (nums: number[], givens: Set<number>) => solution =\r\n  (nums, givens) => bfHelper(nums, givens, 0, [])\r\n\r\n/**\r\n * Set subtraction [s1] \\ [s2]\r\n * @param s1 First set\r\n * @param s2 Second set\r\n */\r\nconst subtract: (s1: Set<any>, s2: Set<any>) => Set<any> = (s1, s2) => {\r\n  const diff = new Set(s1);\r\n  for (let e of s2) {\r\n    diff.delete(e);\r\n  }\r\n  return diff;\r\n}\r\n\r\n/**\r\n * Set union [s1] U [s2]\r\n * @param s1 First set\r\n * @param s2 Second set\r\n */\r\nconst union: (s1: Set<any>, s2: Set<any>) => Set<any> = (s1, s2) => {\r\n  let un = new Set(s1);\r\n  for (let e of s2) {\r\n    un.add(e);\r\n  }\r\n  return un;\r\n}\r\n\r\n/**\r\n * Generates notes for each space on the sudoku board [nums]\r\n * @param nums Sudoku board\r\n */\r\nconst makeNotes: (nums: number[]) => Set<number>[] = nums => {\r\n  const sets: Set<number>[] = Array(27);\r\n  const notes: Set<number>[] = Array(81);\r\n  for (let i = 0; i < 27; i++) {\r\n    sets[i] = new Set();\r\n  }\r\n  const possibleNums = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n  for (let i = 0; i < 81; i++) {\r\n    const row = Math.floor(i / 9);\r\n    const col = i % 9;\r\n    const box = 3 * Math.floor(row / 3) + Math.floor(col / 3);\r\n    if (nums[i] !== 0) {\r\n      sets[row].add(nums[i])\r\n      sets[9 + col].add(nums[i])\r\n      sets[18 + box].add(nums[i])\r\n    }\r\n  }\r\n  for (let i = 0; i < 81; i++) {\r\n    if (nums[i] === 0) {\r\n      const row = Math.floor(i / 9);\r\n      const col = i % 9;\r\n      const box = 3 * Math.floor(row / 3) + Math.floor(col / 3);\r\n      notes[i] = subtract(possibleNums, union(sets[row], union(sets[9 + col], sets[18 + box])));\r\n    }\r\n  }\r\n  return notes;\r\n}\r\n\r\n/**\r\n * Updates [notes] after inserting [val] at index [p]\r\n * @param notes Current notes for a sudoku board\r\n * @param p Index of changed value\r\n * @param val Value of changed value\r\n */\r\nconst updateNotes: (notes: Set<number>[], p: number, val: number) => void =\r\n  (notes, p, val) => {\r\n    let i: number;\r\n    let j: number;\r\n    const row = Math.floor(p / 9);\r\n    const col = p % 9;\r\n    const boxTop = row < 3 ? 0 : row < 6 ? 3 : 6;\r\n    const boxLeft = col < 3 ? 0 : col < 6 ? 3 : 6;\r\n    //Iter row\r\n    for (i = row * 9; i < row * 9 + 9; i++) {\r\n      if (notes[i]) notes[i].delete(val);\r\n    }\r\n    //Iter col\r\n    for (i = col; i < 81; i = i + 9) {\r\n      if (notes[i]) notes[i].delete(val);\r\n    }\r\n    //Iter box\r\n    for (i = boxTop * 9; i < boxTop * 9 + 27; i = i + 9) {\r\n      for (j = boxLeft; j < boxLeft + 3; j++) {\r\n        if (notes[i + j]) notes[i + j].delete(val);\r\n      }\r\n    }\r\n  }\r\n\r\n/**\r\n * Copies an array of sets\r\n * @param l Array of sets\r\n */\r\nconst copySetArray: (l: Set<any>[]) => Set<any>[] = l => {\r\n  let r: Set<any>[] = Array(81).fill(null);\r\n  for (let i = 0; i < l.length; i++) {\r\n    if (l[i]) r[i] = new Set(l[i]);\r\n  }\r\n  return r;\r\n}\r\n\r\nconst smartFill: (nums: number[], notes: Set<number>[], acc: Array<step>) => solution = (nums, notes, acc) => {\r\n  let i = 0;\r\n  let smallest = [-1, 10];\r\n  while (i < 81 && (!notes[i] || notes[i].size !== 1)) {\r\n    if (notes[i]) smallest = smallest[1] > notes[i].size ? [i, notes[i].size] : smallest;\r\n    if (notes[i] && notes[i].size === 0) {\r\n      return null;\r\n    }\r\n    i++;\r\n  }\r\n  if (!notes[i] || notes[i].size !== 1) {\r\n    if (smallest[0] > -1) {\r\n      i = smallest[0];\r\n      const newNums = nums.slice();\r\n      const val = notes[i].keys().next().value;\r\n      acc.push({ notes: false, index: i, num: val, old: newNums[i] });\r\n      newNums[i] = val;\r\n      const newNotes = copySetArray(notes);\r\n      newNotes[i] = null;\r\n      updateNotes(newNotes, i, val);\r\n      const ret = smartFill(newNums, newNotes, acc);\r\n      if (ret === null) {\r\n        notes[i].delete(val);\r\n        return smartFill(nums, notes, acc);\r\n      }\r\n      return ret;\r\n    }\r\n    return { solution: nums, steps: acc };\r\n  }\r\n  nums[i] = notes[i].keys().next().value;\r\n  acc.push({ notes: false, index: i, num: nums[i], old: 0 });\r\n  notes[i] = null;\r\n  updateNotes(notes, i, nums[i]);\r\n  const ret = smartFill(nums, notes, acc);\r\n  if (ret === null) {\r\n    acc.push({ notes: false, index: i, num: 0, old: null });\r\n  }\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Solves sudoku board [nums] using a smarter brute force algorithm\r\n * @param nums Sudoku board\r\n * @param givens Indices of hints on [nums]\r\n */\r\nconst smartBruteForce: (nums: number[], givens: Set<number>) => solution =\r\n  (nums, givens) => {\r\n    const notes = makeNotes(nums);\r\n    return smartFill(nums, notes, []);\r\n  }\r\n\r\n/**\r\n * Generates given hints for new sudoku board [nums]\r\n * @param nums Sudoku board\r\n */\r\nconst makeGivens: (nums: number[]) => Set<number> = (nums: number[]) => {\r\n  const givens: Set<number> = new Set();\r\n  for (let i = 0; i < nums.length; i++) {\r\n    if (nums[i] !== 0) {\r\n      givens.add(i);\r\n    }\r\n  }\r\n  return givens;\r\n}\r\n\r\nexport { bruteForce, makeGivens, checkUpdate, smartBruteForce };\r\n","const puzzles = [\r\n  { puzzle: [0, 0, 4, 3, 0, 0, 2, 0, 9, 0, 0, 5, 0, 0, 9, 0, 0, 1, 0, 7, 0, 0, 6, 0, 0, 4, 3, 0, 0, 6, 0, 0, 2, 0, 8, 7, 1, 9, 0, 0, 0, 7, 4, 0, 0, 0, 5, 0, 0, 8, 3, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 3, 5, 0, 8, 6, 9, 0, 0, 4, 2, 9, 1, 0, 3, 0, 0], solution: [8, 6, 4, 3, 7, 1, 2, 5, 9, 3, 2, 5, 8, 4, 9, 7, 6, 1, 9, 7, 1, 2, 6, 5, 8, 4, 3, 4, 3, 6, 1, 9, 2, 5, 8, 7, 1, 9, 8, 6, 5, 7, 4, 3, 2, 2, 5, 7, 4, 8, 3, 9, 1, 6, 6, 8, 9, 7, 3, 4, 1, 2, 5, 7, 1, 3, 5, 2, 8, 6, 9, 4, 5, 4, 2, 9, 1, 6, 3, 7, 8] },\r\n  { puzzle: [0, 4, 0, 1, 0, 0, 0, 5, 0, 1, 0, 7, 0, 0, 3, 9, 6, 0, 5, 2, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 0, 9, 0, 6, 8, 0, 0, 8, 0, 3, 0, 5, 0, 6, 2, 0, 0, 9, 0, 0, 6, 0, 5, 4, 3, 6, 0, 0, 0, 8, 0, 7, 0, 0, 2, 5, 0, 0, 9, 7, 1, 0, 0], solution: [3, 4, 6, 1, 7, 9, 2, 5, 8, 1, 8, 7, 5, 2, 3, 9, 6, 4, 5, 2, 9, 6, 4, 8, 3, 7, 1, 9, 6, 5, 8, 3, 2, 4, 1, 7, 4, 7, 2, 9, 1, 6, 8, 3, 5, 8, 1, 3, 7, 5, 4, 6, 2, 9, 7, 9, 8, 2, 6, 1, 5, 4, 3, 6, 3, 1, 4, 8, 5, 7, 9, 2, 2, 5, 4, 3, 9, 7, 1, 8, 6] },\r\n  { puzzle: [6, 0, 0, 1, 2, 0, 3, 8, 4, 0, 0, 8, 4, 5, 9, 0, 7, 2, 0, 0, 0, 0, 0, 6, 0, 0, 5, 0, 0, 0, 2, 6, 4, 0, 3, 0, 0, 7, 0, 0, 8, 0, 0, 0, 6, 9, 4, 0, 0, 0, 3, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 8, 9, 7, 0, 0, 0, 0, 0, 5, 0, 2, 0, 0, 0, 1, 9, 0], solution: [6, 9, 5, 1, 2, 7, 3, 8, 4, 1, 3, 8, 4, 5, 9, 6, 7, 2, 7, 2, 4, 8, 3, 6, 9, 1, 5, 8, 5, 1, 2, 6, 4, 7, 3, 9, 2, 7, 3, 9, 8, 1, 5, 4, 6, 9, 4, 6, 5, 7, 3, 8, 2, 1, 3, 1, 7, 6, 9, 2, 4, 5, 8, 4, 8, 9, 7, 1, 5, 2, 6, 3, 5, 6, 2, 3, 4, 8, 1, 9, 7] },\r\n  { puzzle: [4, 9, 7, 2, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 5, 0, 0, 0, 0, 1, 6, 0, 9, 8, 6, 2, 0, 3, 0, 0, 0, 4, 0, 3, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 1, 0, 7, 2, 6, 0, 0, 0, 0, 2, 0, 0, 5, 8, 7, 0, 0, 0, 0, 6, 0, 0, 0, 0, 4, 5, 3, 0, 0, 9, 7, 0, 6, 1], solution: [4, 9, 7, 2, 5, 8, 3, 1, 6, 1, 8, 6, 4, 3, 9, 7, 2, 5, 2, 5, 3, 7, 1, 6, 4, 9, 8, 6, 2, 9, 3, 8, 1, 5, 4, 7, 3, 7, 5, 9, 6, 4, 1, 8, 2, 8, 4, 1, 5, 7, 2, 6, 3, 9, 9, 6, 2, 1, 4, 5, 8, 7, 3, 7, 1, 8, 6, 2, 3, 9, 5, 4, 5, 3, 4, 8, 9, 7, 2, 6, 1] },\r\n  { puzzle: [0, 0, 5, 9, 1, 0, 3, 0, 8, 0, 0, 9, 4, 0, 3, 0, 6, 0, 0, 2, 7, 5, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 8, 2, 0, 0, 0, 7, 0, 0, 6, 0, 0, 7, 0, 0, 4, 0, 0, 0, 0, 8, 0, 0, 0, 0, 6, 4, 0, 1, 5, 0, 7, 0, 0, 8, 9, 0, 0, 0, 0, 4, 2, 0], solution: [4, 6, 5, 9, 1, 2, 3, 7, 8, 1, 8, 9, 4, 7, 3, 5, 6, 2, 3, 2, 7, 5, 6, 8, 1, 4, 9, 7, 3, 8, 6, 4, 5, 2, 9, 1, 9, 5, 4, 8, 2, 1, 6, 3, 7, 2, 1, 6, 3, 9, 7, 8, 5, 4, 5, 7, 3, 2, 8, 4, 9, 1, 6, 6, 4, 2, 1, 5, 9, 7, 8, 3, 8, 9, 1, 7, 3, 6, 4, 2, 5] },\r\n  { puzzle: [1, 0, 0, 0, 0, 5, 0, 0, 7, 3, 8, 0, 9, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 4, 8, 0, 8, 2, 0, 0, 0, 1, 0, 7, 5, 0, 4, 0, 7, 6, 0, 0, 2, 0, 0, 6, 9, 0, 0, 2, 0, 0, 1, 0, 0, 5, 0, 3, 9, 0, 0, 4, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 4, 6, 3, 5, 2], solution: [1, 9, 4, 6, 8, 5, 2, 3, 7, 3, 8, 2, 9, 7, 4, 5, 1, 6, 6, 5, 7, 2, 1, 3, 4, 8, 9, 8, 2, 3, 4, 9, 1, 6, 7, 5, 5, 4, 1, 7, 6, 8, 9, 2, 3, 7, 6, 9, 3, 5, 2, 8, 4, 1, 2, 1, 5, 8, 3, 9, 7, 6, 4, 4, 3, 6, 5, 2, 7, 1, 9, 8, 9, 7, 8, 1, 4, 6, 3, 5, 2] },\r\n  { puzzle: [0, 0, 9, 0, 6, 5, 4, 3, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 6, 0, 0, 1, 0, 8, 0, 2, 0, 0, 0, 3, 0, 9, 0, 0, 0, 2, 5, 0, 1, 4, 0, 3, 9, 6, 0, 8, 0, 4, 0, 0, 0, 1, 0, 0, 0, 3, 0, 5, 0, 9, 0, 0, 7, 0, 5, 6, 0, 8, 0, 0, 0, 0, 0, 7, 0, 2, 4, 0, 0, 9, 0], solution: [2, 8, 9, 7, 6, 5, 4, 3, 1, 3, 1, 7, 9, 2, 4, 8, 5, 6, 6, 4, 5, 1, 3, 8, 7, 2, 9, 7, 6, 3, 8, 9, 1, 5, 4, 2, 5, 2, 1, 4, 7, 3, 9, 6, 8, 8, 9, 4, 6, 5, 2, 1, 7, 3, 4, 3, 2, 5, 1, 9, 6, 8, 7, 9, 5, 6, 3, 8, 7, 2, 1, 4, 1, 7, 8, 2, 4, 6, 3, 9, 5] },\r\n  { puzzle: [0, 0, 0, 0, 0, 0, 6, 5, 7, 7, 0, 2, 4, 0, 0, 1, 0, 0, 3, 5, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 2, 0, 0, 0, 9, 2, 1, 0, 3, 0, 0, 5, 0, 0, 0, 4, 7, 1, 0, 9, 0, 0, 8, 0, 0, 8, 7, 6, 0, 0, 9, 0, 9, 0, 0, 5, 0, 2, 0, 3, 0, 0, 3, 0, 0, 1, 8, 2, 0, 6], solution: [8, 9, 4, 2, 3, 1, 6, 5, 7, 7, 6, 2, 4, 9, 5, 1, 8, 3, 3, 5, 1, 8, 7, 6, 9, 4, 2, 5, 8, 3, 6, 2, 4, 7, 1, 9, 2, 1, 9, 3, 8, 7, 5, 6, 4, 6, 4, 7, 1, 5, 9, 3, 2, 8, 1, 2, 8, 7, 6, 3, 4, 9, 5, 9, 7, 6, 5, 4, 2, 8, 3, 1, 4, 3, 5, 9, 1, 8, 2, 7, 6] },\r\n  { puzzle: [5, 0, 3, 0, 7, 0, 1, 9, 0, 0, 0, 0, 0, 0, 6, 7, 5, 0, 0, 4, 7, 1, 9, 0, 6, 0, 0, 4, 0, 0, 0, 3, 8, 0, 0, 0, 9, 5, 0, 2, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0, 7, 2, 0, 0, 0, 8, 0, 4, 0, 0, 1, 3, 0, 0, 0, 0, 1, 8, 6, 0, 0, 8, 6, 7, 2, 0, 0, 0, 5], solution: [5, 6, 3, 4, 7, 2, 1, 9, 8, 2, 1, 9, 3, 8, 6, 7, 5, 4, 8, 4, 7, 1, 9, 5, 6, 2, 3, 4, 7, 2, 6, 3, 8, 5, 1, 9, 9, 5, 1, 2, 4, 7, 3, 8, 6, 6, 3, 8, 5, 1, 9, 4, 7, 2, 7, 9, 5, 8, 6, 4, 2, 3, 1, 3, 2, 4, 9, 5, 1, 8, 6, 7, 1, 8, 6, 7, 2, 3, 9, 4, 5] },\r\n  { puzzle: [0, 6, 0, 7, 2, 0, 9, 0, 8, 0, 8, 4, 0, 0, 3, 0, 0, 1, 7, 0, 0, 1, 0, 0, 0, 6, 5, 9, 0, 0, 0, 0, 8, 0, 0, 0, 0, 7, 1, 0, 6, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3, 4, 0, 0, 0, 2, 0, 0, 7, 0, 6, 0, 3, 0, 0, 4, 9, 8, 0, 0, 2, 1, 5, 0, 0, 0, 0, 9, 0], solution: [1, 6, 3, 7, 2, 5, 9, 4, 8, 5, 8, 4, 6, 9, 3, 2, 7, 1, 7, 2, 9, 1, 8, 4, 3, 6, 5, 9, 4, 6, 3, 5, 8, 1, 2, 7, 3, 7, 1, 4, 6, 2, 5, 8, 9, 8, 5, 2, 9, 1, 7, 6, 3, 4, 4, 9, 8, 2, 3, 1, 7, 5, 6, 6, 3, 7, 5, 4, 9, 8, 1, 2, 2, 1, 5, 8, 7, 6, 4, 9, 3] },\r\n  { puzzle: [0, 0, 4, 0, 8, 3, 0, 0, 2, 0, 5, 1, 0, 0, 4, 3, 0, 0, 0, 0, 0, 0, 9, 6, 7, 1, 0, 1, 2, 0, 8, 0, 0, 0, 0, 6, 0, 4, 0, 0, 0, 0, 5, 0, 0, 8, 3, 0, 6, 0, 7, 9, 0, 0, 0, 6, 0, 3, 0, 9, 0, 4, 0, 0, 0, 7, 0, 0, 0, 2, 0, 5, 0, 9, 0, 0, 5, 0, 8, 0, 3], solution: [9, 7, 4, 1, 8, 3, 6, 5, 2, 6, 5, 1, 2, 7, 4, 3, 8, 9, 2, 8, 3, 5, 9, 6, 7, 1, 4, 1, 2, 9, 8, 3, 5, 4, 7, 6, 7, 4, 6, 9, 1, 2, 5, 3, 8, 8, 3, 5, 6, 4, 7, 9, 2, 1, 5, 6, 8, 3, 2, 9, 1, 4, 7, 3, 1, 7, 4, 6, 8, 2, 9, 5, 4, 9, 2, 7, 5, 1, 8, 6, 3] },\r\n  { puzzle: [0, 0, 0, 0, 6, 0, 2, 8, 0, 7, 0, 9, 0, 0, 1, 0, 0, 0, 8, 6, 0, 3, 2, 0, 0, 7, 4, 9, 0, 0, 0, 4, 0, 5, 1, 0, 0, 0, 7, 1, 9, 0, 3, 4, 0, 0, 0, 3, 0, 0, 6, 0, 0, 2, 0, 0, 2, 9, 7, 0, 0, 0, 0, 3, 0, 0, 8, 0, 0, 9, 0, 5, 5, 0, 0, 0, 0, 0, 0, 2, 1], solution: [4, 3, 1, 5, 6, 7, 2, 8, 9, 7, 2, 9, 4, 8, 1, 6, 5, 3, 8, 6, 5, 3, 2, 9, 1, 7, 4, 9, 8, 6, 2, 4, 3, 5, 1, 7, 2, 5, 7, 1, 9, 8, 3, 4, 6, 1, 4, 3, 7, 5, 6, 8, 9, 2, 6, 1, 2, 9, 7, 5, 4, 3, 8, 3, 7, 4, 8, 1, 2, 9, 6, 5, 5, 9, 8, 6, 3, 4, 7, 2, 1] },\r\n  { puzzle: [0, 0, 4, 3, 0, 0, 0, 0, 0, 8, 9, 0, 2, 0, 0, 6, 7, 0, 7, 0, 0, 9, 0, 0, 0, 5, 0, 5, 0, 0, 0, 0, 8, 1, 4, 0, 0, 7, 0, 0, 3, 2, 0, 6, 0, 6, 0, 0, 0, 0, 1, 3, 0, 8, 0, 0, 1, 7, 5, 0, 9, 0, 0, 0, 0, 5, 0, 4, 0, 0, 1, 2, 9, 8, 0, 0, 0, 6, 0, 0, 5], solution: [2, 5, 4, 3, 6, 7, 8, 9, 1, 8, 9, 3, 2, 1, 5, 6, 7, 4, 7, 1, 6, 9, 8, 4, 2, 5, 3, 5, 3, 2, 6, 9, 8, 1, 4, 7, 1, 7, 8, 4, 3, 2, 5, 6, 9, 6, 4, 9, 5, 7, 1, 3, 2, 8, 4, 2, 1, 7, 5, 3, 9, 8, 6, 3, 6, 5, 8, 4, 9, 7, 1, 2, 9, 8, 7, 1, 2, 6, 4, 3, 5] },\r\n  { puzzle: [0, 0, 8, 0, 7, 0, 1, 0, 0, 1, 2, 0, 0, 9, 0, 0, 5, 4, 0, 0, 0, 0, 0, 3, 0, 2, 0, 6, 0, 4, 0, 1, 0, 0, 8, 9, 5, 3, 0, 7, 8, 0, 0, 1, 0, 0, 0, 9, 0, 6, 2, 3, 0, 0, 0, 8, 0, 0, 4, 0, 6, 0, 7, 0, 0, 7, 5, 0, 6, 0, 0, 0, 4, 0, 0, 8, 0, 0, 0, 0, 2], solution: [9, 5, 8, 2, 7, 4, 1, 6, 3, 1, 2, 3, 6, 9, 8, 7, 5, 4, 7, 4, 6, 1, 5, 3, 9, 2, 8, 6, 7, 4, 3, 1, 5, 2, 8, 9, 5, 3, 2, 7, 8, 9, 4, 1, 6, 8, 1, 9, 4, 6, 2, 3, 7, 5, 2, 8, 5, 9, 4, 1, 6, 3, 7, 3, 9, 7, 5, 2, 6, 8, 4, 1, 4, 6, 1, 8, 3, 7, 5, 9, 2] },\r\n  { puzzle: [0, 6, 5, 3, 7, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 3, 7, 0, 0, 0, 0, 6, 4, 0, 8, 0, 0, 0, 9, 7, 0, 0, 4, 0, 2, 8, 0, 8, 0, 0, 9, 0, 0, 0, 1, 1, 0, 0, 0, 2, 0, 9, 4, 0, 0, 4, 0, 0, 0, 6, 7, 0, 0, 0, 7, 0, 0, 1, 8, 0, 5, 0, 2, 3, 0, 9, 0, 0, 0, 6, 0], solution: [8, 6, 5, 3, 7, 9, 4, 1, 2, 9, 2, 4, 5, 8, 1, 3, 7, 6, 7, 1, 3, 6, 4, 2, 8, 9, 5, 3, 9, 7, 1, 6, 4, 5, 2, 8, 4, 8, 2, 7, 9, 5, 6, 3, 1, 1, 5, 6, 8, 2, 3, 9, 4, 7, 5, 4, 1, 2, 3, 6, 7, 8, 9, 6, 7, 9, 4, 1, 8, 2, 5, 3, 2, 3, 8, 9, 5, 7, 1, 6, 4] },\r\n  { puzzle: [0, 0, 5, 7, 1, 0, 3, 2, 9, 0, 0, 0, 3, 6, 2, 8, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 9, 8, 0, 0, 8, 3, 9, 0, 0, 2, 5, 0, 0, 0, 6, 0, 0, 3, 1, 0, 0, 3, 0, 0, 1, 0, 6, 0, 0, 0, 4, 0, 9, 8, 0, 0, 0, 0, 7, 0, 7, 0, 0, 2, 9, 5, 0, 0], solution: [8, 6, 5, 7, 1, 4, 3, 2, 9, 9, 1, 7, 3, 6, 2, 8, 4, 5, 2, 3, 4, 5, 9, 8, 7, 6, 1, 1, 4, 2, 6, 5, 7, 9, 8, 3, 7, 8, 3, 9, 4, 1, 2, 5, 6, 5, 9, 6, 2, 8, 3, 1, 7, 4, 3, 5, 8, 1, 7, 6, 4, 9, 2, 4, 2, 9, 8, 3, 5, 6, 1, 7, 6, 7, 1, 4, 2, 9, 5, 3, 8] },\r\n  { puzzle: [2, 0, 0, 0, 0, 5, 3, 0, 0, 0, 0, 0, 0, 7, 3, 8, 5, 0, 0, 0, 0, 1, 0, 8, 9, 0, 4, 0, 7, 0, 0, 0, 9, 0, 0, 1, 6, 5, 1, 0, 0, 0, 0, 4, 0, 0, 4, 0, 2, 0, 0, 0, 8, 0, 3, 0, 0, 0, 5, 0, 0, 0, 0, 5, 8, 0, 7, 6, 0, 1, 0, 0, 4, 1, 0, 0, 3, 0, 0, 9, 6], solution: [2, 6, 8, 4, 9, 5, 3, 1, 7, 1, 9, 4, 6, 7, 3, 8, 5, 2, 7, 3, 5, 1, 2, 8, 9, 6, 4, 8, 7, 2, 5, 4, 9, 6, 3, 1, 6, 5, 1, 3, 8, 7, 2, 4, 9, 9, 4, 3, 2, 1, 6, 7, 8, 5, 3, 2, 6, 9, 5, 1, 4, 7, 8, 5, 8, 9, 7, 6, 4, 1, 2, 3, 4, 1, 7, 8, 3, 2, 5, 9, 6] },\r\n  { puzzle: [0, 4, 0, 8, 0, 0, 5, 0, 0, 0, 8, 0, 7, 6, 0, 0, 9, 2, 0, 0, 1, 0, 0, 5, 4, 7, 0, 0, 5, 6, 3, 0, 9, 0, 0, 0, 0, 0, 9, 0, 0, 1, 0, 0, 4, 3, 2, 0, 5, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 7, 0, 0, 7, 0, 0, 0, 9, 0, 0, 3, 0, 0, 0, 5, 0, 0, 8, 0, 2, 6], solution: [9, 4, 7, 8, 1, 2, 5, 6, 3, 5, 8, 3, 7, 6, 4, 1, 9, 2, 2, 6, 1, 9, 3, 5, 4, 7, 8, 1, 5, 6, 3, 4, 9, 2, 8, 7, 8, 7, 9, 6, 2, 1, 3, 5, 4, 3, 2, 4, 5, 8, 7, 6, 1, 9, 6, 9, 8, 2, 5, 3, 7, 4, 1, 7, 1, 2, 4, 9, 6, 8, 3, 5, 4, 3, 5, 1, 7, 8, 9, 2, 6] },\r\n  { puzzle: [0, 5, 0, 0, 8, 3, 0, 1, 7, 0, 0, 0, 1, 0, 0, 4, 0, 0, 3, 0, 4, 0, 0, 5, 6, 0, 8, 0, 0, 0, 0, 3, 0, 0, 0, 9, 0, 9, 0, 8, 2, 4, 5, 0, 0, 0, 0, 6, 0, 0, 0, 0, 7, 0, 0, 0, 9, 0, 0, 0, 0, 5, 0, 0, 0, 7, 2, 9, 0, 0, 8, 6, 1, 0, 3, 6, 0, 7, 2, 0, 4], solution: [6, 5, 2, 4, 8, 3, 9, 1, 7, 9, 7, 8, 1, 6, 2, 4, 3, 5, 3, 1, 4, 9, 7, 5, 6, 2, 8, 8, 2, 5, 7, 3, 6, 1, 4, 9, 7, 9, 1, 8, 2, 4, 5, 6, 3, 4, 3, 6, 5, 1, 9, 8, 7, 2, 2, 6, 9, 3, 4, 8, 7, 5, 1, 5, 4, 7, 2, 9, 1, 3, 8, 6, 1, 8, 3, 6, 5, 7, 2, 9, 4] },\r\n  { puzzle: [7, 0, 0, 0, 8, 4, 0, 0, 5, 3, 0, 0, 7, 0, 1, 0, 2, 0, 0, 8, 0, 2, 6, 0, 4, 0, 1, 6, 2, 4, 1, 0, 9, 0, 3, 8, 8, 0, 3, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 7, 9, 0, 0, 3, 5, 4, 0, 0, 0, 0, 6], solution: [7, 1, 2, 9, 8, 4, 3, 6, 5, 3, 4, 6, 7, 5, 1, 8, 2, 9, 5, 8, 9, 2, 6, 3, 4, 7, 1, 6, 2, 4, 1, 7, 9, 5, 3, 8, 8, 5, 3, 6, 4, 2, 9, 1, 7, 1, 9, 7, 5, 3, 8, 6, 4, 2, 9, 7, 8, 3, 1, 6, 2, 5, 4, 4, 6, 1, 8, 2, 5, 7, 9, 3, 2, 3, 5, 4, 9, 7, 1, 8, 6] },\r\n  { puzzle: [0, 6, 7, 0, 5, 0, 0, 1, 0, 0, 8, 4, 3, 0, 9, 0, 0, 0, 0, 0, 3, 0, 8, 0, 0, 4, 0, 0, 9, 0, 0, 0, 0, 2, 0, 5, 0, 0, 0, 6, 2, 1, 7, 9, 0, 7, 0, 0, 0, 9, 3, 6, 0, 0, 3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 7, 1, 5, 3, 5, 0, 0, 8, 0, 0, 0, 7, 6], solution: [9, 6, 7, 2, 5, 4, 3, 1, 8, 1, 8, 4, 3, 7, 9, 5, 6, 2, 2, 5, 3, 1, 8, 6, 9, 4, 7, 6, 9, 1, 7, 4, 8, 2, 3, 5, 8, 3, 5, 6, 2, 1, 7, 9, 4, 7, 4, 2, 5, 9, 3, 6, 8, 1, 3, 7, 6, 4, 1, 5, 8, 2, 9, 4, 2, 8, 9, 6, 7, 1, 5, 3, 5, 1, 9, 8, 3, 2, 4, 7, 6] },\r\n  { puzzle: [0, 0, 1, 4, 0, 9, 0, 3, 0, 0, 0, 0, 3, 0, 6, 0, 5, 2, 0, 0, 7, 0, 0, 8, 1, 9, 0, 0, 6, 0, 0, 2, 0, 8, 0, 0, 0, 0, 0, 0, 0, 3, 0, 6, 5, 8, 9, 4, 5, 0, 7, 0, 0, 0, 4, 0, 3, 0, 9, 1, 0, 8, 0, 0, 7, 9, 0, 4, 0, 0, 2, 6, 0, 0, 0, 7, 0, 0, 9, 0, 0], solution: [2, 5, 1, 4, 7, 9, 6, 3, 8, 9, 4, 8, 3, 1, 6, 7, 5, 2, 6, 3, 7, 2, 5, 8, 1, 9, 4, 3, 6, 5, 1, 2, 4, 8, 7, 9, 7, 1, 2, 9, 8, 3, 4, 6, 5, 8, 9, 4, 5, 6, 7, 2, 1, 3, 4, 2, 3, 6, 9, 1, 5, 8, 7, 1, 7, 9, 8, 4, 5, 3, 2, 6, 5, 8, 6, 7, 3, 2, 9, 4, 1] },\r\n  { puzzle: [2, 0, 6, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 6, 5, 0, 7, 0, 0, 4, 7, 1, 0, 8, 0, 5, 0, 5, 0, 0, 0, 0, 0, 0, 2, 9, 0, 0, 8, 0, 1, 9, 4, 0, 6, 0, 0, 0, 4, 2, 0, 0, 0, 1, 0, 0, 0, 0, 4, 2, 8, 0, 0, 6, 0, 9, 3, 0, 0, 0, 0, 5, 0, 7, 0, 0, 0, 0, 0, 1, 3], solution: [2, 5, 6, 7, 3, 4, 1, 9, 8, 8, 9, 1, 2, 6, 5, 3, 7, 4, 3, 4, 7, 1, 9, 8, 6, 5, 2, 5, 1, 4, 6, 8, 3, 7, 2, 9, 7, 2, 8, 5, 1, 9, 4, 3, 6, 9, 6, 3, 4, 2, 7, 5, 8, 1, 1, 3, 5, 9, 4, 2, 8, 6, 7, 6, 8, 9, 3, 7, 1, 2, 4, 5, 4, 7, 2, 8, 5, 6, 9, 1, 3] },\r\n  { puzzle: [0, 0, 4, 5, 0, 2, 1, 7, 8, 1, 0, 0, 0, 9, 0, 0, 3, 0, 0, 0, 0, 8, 0, 0, 0, 0, 4, 6, 0, 0, 4, 5, 0, 0, 0, 0, 0, 7, 0, 9, 0, 0, 0, 1, 2, 8, 0, 1, 2, 0, 3, 5, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 9, 3, 5, 0, 0, 6, 0, 8, 0, 7, 0, 9, 0, 3, 0, 0, 6, 2, 0], solution: [9, 6, 4, 5, 3, 2, 1, 7, 8, 1, 8, 7, 6, 9, 4, 2, 3, 5, 2, 3, 5, 8, 1, 7, 9, 6, 4, 6, 2, 9, 4, 5, 1, 7, 8, 3, 5, 7, 3, 9, 8, 6, 4, 1, 2, 8, 4, 1, 2, 7, 3, 5, 9, 6, 4, 1, 6, 7, 2, 8, 3, 5, 9, 3, 5, 2, 1, 6, 9, 8, 4, 7, 7, 9, 8, 3, 4, 5, 6, 2, 1] },\r\n  { puzzle: [1, 4, 0, 0, 6, 0, 8, 0, 0, 0, 8, 5, 0, 1, 0, 0, 4, 0, 9, 0, 7, 4, 0, 0, 2, 5, 0, 0, 3, 0, 0, 7, 0, 4, 0, 0, 2, 0, 9, 0, 0, 0, 3, 0, 7, 0, 0, 8, 9, 0, 0, 0, 6, 0, 0, 0, 0, 7, 4, 0, 0, 1, 0, 6, 0, 1, 3, 0, 5, 0, 9, 0, 7, 0, 0, 0, 0, 2, 6, 0, 0], solution: [1, 4, 2, 5, 6, 9, 8, 7, 3, 3, 8, 5, 2, 1, 7, 9, 4, 6, 9, 6, 7, 4, 3, 8, 2, 5, 1, 5, 3, 6, 8, 7, 1, 4, 2, 9, 2, 1, 9, 6, 5, 4, 3, 8, 7, 4, 7, 8, 9, 2, 3, 1, 6, 5, 8, 9, 3, 7, 4, 6, 5, 1, 2, 6, 2, 1, 3, 8, 5, 7, 9, 4, 7, 5, 4, 1, 9, 2, 6, 3, 8] },\r\n  { puzzle: [5, 9, 0, 0, 0, 0, 1, 4, 7, 0, 0, 0, 9, 0, 0, 0, 0, 8, 0, 7, 2, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0, 4, 0, 2, 9, 0, 0, 2, 0, 0, 3, 0, 8, 0, 6, 8, 0, 0, 1, 7, 0, 0, 5, 0, 0, 0, 5, 7, 6, 4, 0, 0, 9, 0, 3, 6, 0, 0, 5, 0, 0, 0, 1, 0, 0, 8, 0, 0, 0, 0, 2], solution: [5, 9, 8, 3, 2, 6, 1, 4, 7, 3, 1, 4, 9, 5, 7, 6, 2, 8, 6, 7, 2, 4, 8, 1, 9, 3, 5, 7, 5, 3, 6, 4, 8, 2, 9, 1, 4, 2, 1, 5, 3, 9, 8, 7, 6, 8, 6, 9, 1, 7, 2, 4, 5, 3, 2, 8, 5, 7, 6, 4, 3, 1, 9, 9, 3, 6, 2, 1, 5, 7, 8, 4, 1, 4, 7, 8, 9, 3, 5, 6, 2] },\r\n  { puzzle: [1, 0, 0, 0, 0, 0, 0, 9, 0, 2, 0, 8, 9, 7, 0, 6, 0, 5, 0, 0, 0, 5, 3, 2, 0, 0, 0, 0, 0, 6, 0, 5, 0, 4, 0, 0, 7, 0, 0, 8, 0, 6, 0, 0, 2, 0, 8, 3, 7, 0, 0, 0, 1, 0, 6, 0, 4, 0, 8, 0, 1, 2, 0, 8, 9, 0, 6, 0, 0, 0, 5, 0, 0, 1, 5, 0, 4, 0, 0, 0, 7], solution: [1, 5, 7, 4, 6, 8, 2, 9, 3, 2, 3, 8, 9, 7, 1, 6, 4, 5, 4, 6, 9, 5, 3, 2, 7, 8, 1, 9, 2, 6, 1, 5, 3, 4, 7, 8, 7, 4, 1, 8, 9, 6, 5, 3, 2, 5, 8, 3, 7, 2, 4, 9, 1, 6, 6, 7, 4, 3, 8, 5, 1, 2, 9, 8, 9, 2, 6, 1, 7, 3, 5, 4, 3, 1, 5, 2, 4, 9, 8, 6, 7] },\r\n  { puzzle: [9, 0, 0, 0, 8, 4, 0, 6, 0, 6, 0, 4, 0, 0, 5, 2, 0, 7, 0, 3, 0, 0, 7, 0, 0, 8, 0, 7, 6, 0, 0, 0, 1, 5, 0, 0, 0, 5, 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 9, 6, 0, 3, 1, 0, 5, 0, 2, 6, 0, 9, 0, 0, 0, 2, 0, 4, 0, 0, 0, 0, 8, 0, 0, 0, 0, 3, 7, 1, 0], solution: [9, 2, 7, 3, 8, 4, 1, 6, 5, 6, 8, 4, 9, 1, 5, 2, 3, 7, 5, 3, 1, 6, 7, 2, 4, 8, 9, 7, 6, 9, 2, 3, 1, 5, 4, 8, 4, 5, 3, 7, 6, 8, 9, 2, 1, 2, 1, 8, 4, 5, 9, 6, 7, 3, 1, 7, 5, 8, 2, 6, 3, 9, 4, 3, 9, 2, 1, 4, 7, 8, 5, 6, 8, 4, 6, 5, 9, 3, 7, 1, 2] },\r\n  { puzzle: [3, 0, 8, 0, 5, 6, 0, 0, 7, 0, 0, 6, 9, 0, 0, 2, 5, 3, 0, 1, 2, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 9, 0, 4, 8, 0, 0, 0, 0, 0, 7, 6, 0, 1, 0, 9, 8, 0, 5, 0, 0, 0, 0, 0, 1, 9, 0, 4, 8, 3, 1, 0, 0, 0, 5, 0, 6, 0, 4, 0, 0, 0, 7, 0, 3, 0], solution: [3, 9, 8, 2, 5, 6, 4, 1, 7, 4, 7, 6, 9, 1, 8, 2, 5, 3, 5, 1, 2, 7, 4, 3, 6, 9, 8, 1, 8, 5, 6, 7, 4, 3, 2, 9, 9, 2, 4, 8, 3, 5, 7, 6, 1, 7, 6, 3, 1, 2, 9, 8, 4, 5, 2, 5, 7, 3, 6, 1, 9, 8, 4, 8, 3, 1, 4, 9, 2, 5, 7, 6, 6, 4, 9, 5, 8, 7, 1, 3, 2] },\r\n  { puzzle: [1, 7, 0, 3, 0, 0, 0, 0, 9, 0, 0, 8, 0, 4, 0, 6, 0, 0, 0, 0, 0, 0, 6, 0, 0, 3, 0, 6, 0, 0, 8, 0, 0, 0, 0, 1, 9, 2, 4, 6, 0, 0, 3, 0, 0, 3, 0, 0, 9, 0, 2, 5, 0, 0, 0, 1, 0, 2, 0, 0, 0, 4, 0, 7, 0, 9, 5, 0, 3, 0, 1, 6, 0, 0, 5, 0, 0, 7, 8, 0, 0], solution: [1, 7, 6, 3, 2, 8, 4, 5, 9, 5, 3, 8, 1, 4, 9, 6, 7, 2, 4, 9, 2, 7, 6, 5, 1, 3, 8, 6, 5, 7, 8, 3, 4, 9, 2, 1, 9, 2, 4, 6, 5, 1, 3, 8, 7, 3, 8, 1, 9, 7, 2, 5, 6, 4, 8, 1, 3, 2, 9, 6, 7, 4, 5, 7, 4, 9, 5, 8, 3, 2, 1, 6, 2, 6, 5, 4, 1, 7, 8, 9, 3] },\r\n  { puzzle: [0, 0, 4, 0, 3, 0, 0, 2, 1, 0, 7, 0, 0, 0, 5, 0, 0, 9, 3, 8, 0, 6, 9, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 6, 0, 2, 1, 0, 0, 4, 5, 0, 0, 1, 0, 9, 0, 7, 0, 0, 3, 0, 0, 0, 8, 4, 6, 7, 0, 0, 5, 6, 0, 0, 0, 1, 2, 4, 0, 0, 0, 8, 2, 5, 0, 0, 3, 0], solution: [9, 5, 4, 7, 3, 8, 6, 2, 1, 2, 7, 6, 4, 1, 5, 3, 8, 9, 3, 8, 1, 6, 9, 2, 5, 7, 4, 8, 3, 7, 5, 6, 4, 9, 1, 2, 6, 9, 2, 1, 8, 3, 4, 5, 7, 4, 1, 5, 9, 2, 7, 8, 6, 3, 1, 2, 3, 8, 4, 6, 7, 9, 5, 5, 6, 9, 3, 7, 1, 2, 4, 8, 7, 4, 8, 2, 5, 9, 1, 3, 6] },\r\n  { puzzle: [0, 8, 3, 2, 0, 0, 0, 9, 6, 2, 0, 0, 0, 3, 0, 7, 0, 4, 0, 0, 7, 9, 1, 5, 0, 0, 0, 4, 0, 2, 3, 9, 0, 0, 0, 8, 0, 1, 0, 0, 0, 4, 0, 6, 0, 0, 6, 9, 8, 7, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 7, 5, 0, 0, 0, 6, 0, 2, 8, 0, 0, 7, 0, 0, 5, 0, 9, 0, 0], solution: [1, 8, 3, 2, 4, 7, 5, 9, 6, 2, 9, 5, 6, 3, 8, 7, 1, 4, 6, 4, 7, 9, 1, 5, 8, 3, 2, 4, 5, 2, 3, 9, 6, 1, 7, 8, 7, 1, 8, 5, 2, 4, 3, 6, 9, 3, 6, 9, 8, 7, 1, 4, 2, 5, 9, 2, 1, 4, 8, 3, 6, 5, 7, 5, 3, 4, 7, 6, 9, 2, 8, 1, 8, 7, 6, 1, 5, 2, 9, 4, 3] },\r\n  { puzzle: [8, 0, 3, 0, 0, 0, 2, 7, 0, 4, 0, 9, 0, 0, 8, 0, 0, 0, 7, 0, 0, 0, 2, 4, 0, 9, 6, 0, 0, 0, 0, 0, 6, 9, 1, 5, 0, 0, 1, 8, 0, 2, 0, 0, 0, 0, 3, 0, 7, 5, 0, 0, 0, 0, 0, 5, 4, 0, 0, 0, 0, 6, 0, 6, 0, 8, 1, 0, 0, 0, 0, 3, 3, 7, 2, 0, 0, 9, 1, 4, 0], solution: [8, 6, 3, 9, 1, 5, 2, 7, 4, 4, 2, 9, 6, 7, 8, 3, 5, 1, 7, 1, 5, 3, 2, 4, 8, 9, 6, 2, 8, 7, 4, 3, 6, 9, 1, 5, 5, 4, 1, 8, 9, 2, 6, 3, 7, 9, 3, 6, 7, 5, 1, 4, 8, 2, 1, 5, 4, 2, 8, 3, 7, 6, 9, 6, 9, 8, 1, 4, 7, 5, 2, 3, 3, 7, 2, 5, 6, 9, 1, 4, 8] },\r\n  { puzzle: [0, 7, 0, 4, 9, 0, 1, 0, 3, 0, 0, 3, 0, 7, 0, 5, 9, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 0, 0, 7, 4, 9, 0, 2, 0, 0, 2, 4, 3, 0, 6, 0, 0, 8, 6, 0, 0, 9, 8, 0, 7, 0, 0, 0, 1, 2, 6, 0, 0, 0, 0, 0, 4, 8, 0, 0, 0, 7, 0, 5, 2], solution: [2, 7, 6, 4, 9, 5, 1, 8, 3, 8, 4, 3, 2, 7, 1, 5, 9, 6, 9, 5, 1, 8, 6, 3, 2, 4, 7, 3, 9, 7, 5, 2, 8, 4, 6, 1, 1, 6, 8, 7, 4, 9, 3, 2, 5, 5, 2, 4, 3, 1, 6, 9, 7, 8, 6, 3, 5, 9, 8, 2, 7, 1, 4, 7, 1, 2, 6, 5, 4, 8, 3, 9, 4, 8, 9, 1, 3, 7, 6, 5, 2] },\r\n  { puzzle: [8, 3, 0, 0, 4, 0, 0, 9, 6, 0, 2, 0, 0, 1, 0, 0, 0, 8, 9, 0, 4, 7, 0, 0, 0, 3, 0, 4, 0, 9, 0, 0, 2, 0, 6, 5, 3, 0, 8, 0, 0, 1, 0, 7, 0, 0, 0, 0, 6, 0, 3, 8, 0, 0, 5, 0, 7, 0, 3, 0, 0, 2, 0, 0, 0, 0, 5, 0, 6, 4, 0, 0, 0, 0, 2, 0, 8, 0, 1, 0, 0], solution: [8, 3, 1, 2, 4, 5, 7, 9, 6, 7, 2, 6, 3, 1, 9, 5, 4, 8, 9, 5, 4, 7, 6, 8, 2, 3, 1, 4, 1, 9, 8, 7, 2, 3, 6, 5, 3, 6, 8, 4, 5, 1, 9, 7, 2, 2, 7, 5, 6, 9, 3, 8, 1, 4, 5, 8, 7, 1, 3, 4, 6, 2, 9, 1, 9, 3, 5, 2, 6, 4, 8, 7, 6, 4, 2, 9, 8, 7, 1, 5, 3] },\r\n  { puzzle: [0, 6, 0, 2, 5, 0, 0, 0, 0, 7, 9, 2, 0, 0, 6, 1, 0, 0, 0, 0, 0, 0, 8, 1, 6, 0, 0, 0, 0, 9, 0, 0, 0, 5, 0, 0, 4, 1, 0, 0, 0, 9, 7, 8, 0, 2, 0, 7, 3, 0, 0, 0, 0, 4, 0, 0, 0, 7, 6, 3, 0, 1, 0, 3, 0, 0, 5, 4, 0, 2, 9, 0, 8, 0, 0, 0, 0, 0, 0, 4, 0], solution: [1, 6, 8, 2, 5, 7, 4, 3, 9, 7, 9, 2, 4, 3, 6, 1, 5, 8, 5, 4, 3, 9, 8, 1, 6, 7, 2, 6, 3, 9, 8, 7, 4, 5, 2, 1, 4, 1, 5, 6, 2, 9, 7, 8, 3, 2, 8, 7, 3, 1, 5, 9, 6, 4, 9, 2, 4, 7, 6, 3, 8, 1, 5, 3, 7, 1, 5, 4, 8, 2, 9, 6, 8, 5, 6, 1, 9, 2, 3, 4, 7] },\r\n  { puzzle: [0, 5, 0, 4, 0, 0, 6, 8, 0, 0, 9, 0, 1, 0, 0, 0, 0, 0, 0, 0, 8, 0, 5, 9, 3, 0, 2, 0, 0, 7, 2, 0, 3, 0, 0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 8, 6, 0, 4, 0, 8, 0, 0, 0, 5, 0, 3, 6, 0, 0, 4, 1, 9, 0, 1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 7, 2, 8, 0, 0, 0, 5, 0], solution: [7, 5, 1, 4, 3, 2, 6, 8, 9, 2, 9, 3, 1, 6, 8, 5, 7, 4, 4, 6, 8, 7, 5, 9, 3, 1, 2, 5, 8, 7, 2, 4, 3, 9, 6, 1, 3, 1, 9, 6, 7, 5, 2, 4, 8, 6, 2, 4, 9, 8, 1, 7, 3, 5, 8, 3, 6, 5, 2, 4, 1, 9, 7, 1, 4, 5, 3, 9, 7, 8, 2, 6, 9, 7, 2, 8, 1, 6, 4, 5, 3] },\r\n  { puzzle: [0, 1, 0, 0, 9, 2, 0, 4, 7, 0, 0, 0, 7, 0, 0, 6, 0, 9, 6, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 0, 8, 9, 0, 0, 8, 4, 0, 1, 0, 5, 0, 7, 0, 1, 0, 6, 4, 0, 0, 2, 8, 0, 4, 8, 0, 0, 3, 0, 0, 0, 0, 9, 0, 0, 0, 1, 7, 0, 0, 5], solution: [3, 1, 8, 6, 9, 2, 5, 4, 7, 2, 5, 4, 7, 8, 1, 6, 3, 9, 6, 9, 7, 5, 4, 3, 1, 2, 8, 5, 6, 3, 9, 7, 4, 8, 1, 2, 7, 2, 1, 3, 6, 8, 9, 5, 4, 8, 4, 9, 1, 2, 5, 3, 7, 6, 1, 7, 6, 4, 5, 9, 2, 8, 3, 4, 8, 5, 2, 3, 6, 7, 9, 1, 9, 3, 2, 8, 1, 7, 4, 6, 5] },\r\n  { puzzle: [0, 7, 8, 0, 1, 0, 6, 0, 9, 2, 0, 3, 0, 0, 9, 0, 0, 8, 4, 1, 0, 0, 6, 0, 0, 5, 2, 7, 2, 0, 1, 0, 6, 0, 3, 0, 0, 0, 0, 4, 0, 0, 7, 0, 0, 0, 9, 1, 3, 0, 5, 0, 0, 0, 9, 3, 2, 0, 0, 0, 4, 0, 0, 0, 0, 5, 7, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 8, 0, 0, 6], solution: [5, 7, 8, 2, 1, 3, 6, 4, 9, 2, 6, 3, 5, 4, 9, 1, 7, 8, 4, 1, 9, 8, 6, 7, 3, 5, 2, 7, 2, 4, 1, 9, 6, 8, 3, 5, 3, 5, 6, 4, 8, 2, 7, 9, 1, 8, 9, 1, 3, 7, 5, 2, 6, 4, 9, 3, 2, 6, 5, 1, 4, 8, 7, 6, 8, 5, 7, 2, 4, 9, 1, 3, 1, 4, 7, 9, 3, 8, 5, 2, 6] },\r\n  { puzzle: [0, 5, 6, 0, 1, 0, 0, 0, 0, 2, 8, 0, 0, 3, 0, 0, 4, 0, 0, 4, 0, 0, 9, 0, 7, 6, 5, 7, 9, 0, 0, 0, 3, 0, 0, 8, 0, 0, 5, 7, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 1, 0, 0, 6, 0, 0, 2, 0, 3, 0, 2, 0, 0, 0, 1, 4, 0, 0, 0, 6, 0, 8, 0, 5, 9, 0, 0], solution: [9, 5, 6, 4, 1, 7, 8, 3, 2, 2, 8, 7, 5, 3, 6, 1, 4, 9, 3, 4, 1, 2, 9, 8, 7, 6, 5, 7, 9, 4, 1, 5, 3, 6, 2, 8, 8, 1, 5, 7, 6, 2, 3, 9, 4, 6, 3, 2, 9, 8, 4, 5, 7, 1, 1, 7, 8, 6, 4, 9, 2, 5, 3, 5, 2, 9, 3, 7, 1, 4, 8, 6, 4, 6, 3, 8, 2, 5, 9, 1, 7] },\r\n  { puzzle: [0, 0, 0, 0, 0, 1, 8, 4, 7, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 5, 9, 3, 4, 8, 0, 0, 6, 3, 0, 0, 0, 2, 0, 0, 0, 4, 0, 7, 6, 1, 0, 0, 5, 0, 0, 2, 0, 0, 0, 0, 6, 7, 9, 0, 0, 4, 0, 2, 0, 7, 0, 6, 9, 0, 0, 7, 8, 0, 0, 4, 1, 5, 0, 0, 3, 5, 9, 0, 0, 0, 0], solution: [6, 3, 2, 9, 5, 1, 8, 4, 7, 8, 1, 4, 6, 7, 2, 9, 5, 3, 7, 5, 9, 3, 4, 8, 1, 2, 6, 3, 9, 1, 7, 2, 5, 6, 8, 4, 4, 7, 6, 1, 8, 9, 5, 3, 2, 2, 8, 5, 4, 3, 6, 7, 9, 1, 5, 4, 8, 2, 1, 7, 3, 6, 9, 9, 2, 7, 8, 6, 3, 4, 1, 5, 1, 6, 3, 5, 9, 4, 2, 7, 8] },\r\n  { puzzle: [2, 0, 5, 0, 4, 0, 0, 0, 3, 0, 0, 1, 0, 0, 9, 0, 0, 0, 0, 4, 6, 0, 0, 1, 5, 8, 7, 0, 0, 4, 6, 0, 7, 0, 9, 0, 8, 0, 2, 0, 0, 0, 0, 5, 6, 0, 9, 0, 0, 2, 0, 3, 4, 0, 1, 7, 0, 0, 0, 8, 2, 0, 0, 0, 0, 0, 5, 0, 0, 8, 0, 0, 5, 0, 0, 9, 0, 3, 0, 0, 1], solution: [2, 8, 5, 7, 4, 6, 9, 1, 3, 7, 3, 1, 8, 5, 9, 6, 2, 4, 9, 4, 6, 2, 3, 1, 5, 8, 7, 3, 5, 4, 6, 8, 7, 1, 9, 2, 8, 1, 2, 3, 9, 4, 7, 5, 6, 6, 9, 7, 1, 2, 5, 3, 4, 8, 1, 7, 9, 4, 6, 8, 2, 3, 5, 4, 6, 3, 5, 1, 2, 8, 7, 9, 5, 2, 8, 9, 7, 3, 4, 6, 1] },\r\n  { puzzle: [1, 0, 3, 8, 0, 0, 0, 0, 0, 9, 0, 6, 4, 0, 0, 0, 7, 2, 0, 0, 0, 2, 0, 5, 0, 9, 0, 0, 9, 0, 0, 7, 0, 0, 5, 0, 0, 8, 4, 9, 0, 1, 3, 0, 0, 0, 0, 2, 5, 0, 6, 0, 0, 0, 2, 1, 0, 0, 0, 4, 0, 0, 5, 3, 0, 8, 7, 0, 0, 4, 0, 1, 0, 7, 0, 0, 8, 0, 6, 0, 0], solution: [1, 2, 3, 8, 9, 7, 5, 4, 6, 9, 5, 6, 4, 1, 3, 8, 7, 2, 8, 4, 7, 2, 6, 5, 1, 9, 3, 6, 9, 1, 3, 7, 8, 2, 5, 4, 5, 8, 4, 9, 2, 1, 3, 6, 7, 7, 3, 2, 5, 4, 6, 9, 1, 8, 2, 1, 9, 6, 3, 4, 7, 8, 5, 3, 6, 8, 7, 5, 9, 4, 2, 1, 4, 7, 5, 1, 8, 2, 6, 3, 9] },\r\n  { puzzle: [8, 5, 0, 4, 2, 0, 3, 7, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 7, 0, 0, 0, 9, 0, 0, 0, 5, 0, 0, 6, 0, 2, 0, 2, 9, 3, 0, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 3, 8, 0, 4, 6, 0, 9, 0, 8, 0, 5, 0, 0, 5, 0, 0, 0, 9, 0, 0, 7, 0, 2, 8, 4, 0, 0, 0, 3], solution: [8, 5, 1, 4, 2, 9, 3, 7, 6, 9, 7, 3, 6, 5, 8, 2, 1, 4, 2, 6, 4, 1, 7, 3, 5, 8, 9, 4, 3, 8, 5, 1, 7, 6, 9, 2, 6, 2, 9, 3, 8, 4, 7, 5, 1, 5, 1, 7, 9, 6, 2, 4, 3, 8, 3, 4, 6, 7, 9, 1, 8, 2, 5, 1, 8, 5, 2, 3, 6, 9, 4, 7, 7, 9, 2, 8, 4, 5, 1, 6, 3] },\r\n  { puzzle: [0, 6, 1, 4, 9, 0, 0, 2, 0, 2, 8, 0, 0, 0, 7, 0, 5, 0, 0, 0, 3, 1, 0, 8, 0, 0, 7, 6, 0, 0, 7, 0, 4, 0, 3, 1, 0, 0, 0, 2, 5, 0, 0, 7, 4, 0, 9, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 8, 5, 7, 0, 0, 0, 0, 2, 0, 6, 8, 0, 0, 9, 0, 6, 0, 0, 0], solution: [7, 6, 1, 4, 9, 5, 8, 2, 3, 2, 8, 4, 3, 6, 7, 1, 5, 9, 9, 5, 3, 1, 2, 8, 4, 6, 7, 6, 2, 5, 7, 8, 4, 9, 3, 1, 1, 3, 8, 2, 5, 9, 6, 7, 4, 4, 9, 7, 6, 3, 1, 5, 8, 2, 3, 4, 6, 5, 1, 2, 7, 9, 8, 5, 7, 9, 8, 4, 3, 2, 1, 6, 8, 1, 2, 9, 7, 6, 3, 4, 5] },\r\n  { puzzle: [6, 0, 8, 9, 0, 0, 0, 5, 0, 0, 0, 0, 3, 2, 0, 1, 9, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0, 0, 7, 3, 6, 0, 0, 5, 7, 0, 2, 6, 0, 0, 0, 0, 0, 0, 3, 1, 0, 5, 0, 2, 0, 0, 8, 0, 0, 0, 0, 0, 6, 4, 0, 2, 0, 0, 9, 0, 5, 0, 7, 0, 4, 7, 0, 0, 8, 0, 0, 1], solution: [6, 3, 8, 9, 1, 7, 4, 5, 2, 7, 5, 4, 3, 2, 6, 1, 9, 8, 2, 1, 9, 5, 8, 4, 3, 7, 6, 4, 9, 2, 8, 7, 3, 6, 1, 5, 5, 7, 1, 2, 6, 9, 8, 4, 3, 8, 6, 3, 1, 4, 5, 7, 2, 9, 1, 8, 5, 7, 3, 2, 9, 6, 4, 3, 2, 6, 4, 9, 1, 5, 8, 7, 9, 4, 7, 6, 5, 8, 2, 3, 1] },\r\n  { puzzle: [0, 0, 0, 7, 0, 0, 9, 0, 0, 0, 0, 4, 3, 0, 0, 5, 2, 7, 0, 1, 0, 0, 0, 6, 0, 8, 4, 8, 0, 0, 0, 9, 4, 0, 5, 3, 0, 4, 0, 0, 0, 1, 2, 0, 0, 9, 6, 2, 0, 8, 0, 0, 7, 0, 1, 0, 0, 8, 6, 9, 0, 0, 0, 7, 0, 0, 0, 2, 0, 1, 3, 0, 0, 5, 9, 0, 0, 0, 0, 0, 0], solution: [5, 3, 8, 7, 4, 2, 9, 1, 6, 6, 9, 4, 3, 1, 8, 5, 2, 7, 2, 1, 7, 9, 5, 6, 3, 8, 4, 8, 7, 1, 2, 9, 4, 6, 5, 3, 3, 4, 5, 6, 7, 1, 2, 9, 8, 9, 6, 2, 5, 8, 3, 4, 7, 1, 1, 2, 3, 8, 6, 9, 7, 4, 5, 7, 8, 6, 4, 2, 5, 1, 3, 9, 4, 5, 9, 1, 3, 7, 8, 6, 2] },\r\n  { puzzle: [6, 8, 0, 9, 0, 5, 0, 0, 0, 0, 0, 3, 0, 0, 0, 5, 0, 8, 4, 0, 2, 1, 0, 8, 7, 0, 3, 3, 9, 0, 7, 2, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 5, 0, 0, 6, 9, 0, 0, 0, 6, 0, 8, 0, 4, 0, 0, 2, 0, 0, 1, 0, 0, 2, 0, 7, 5, 7, 0, 0, 0, 1, 3, 0, 0, 0], solution: [6, 8, 7, 9, 3, 5, 2, 4, 1, 9, 1, 3, 2, 4, 7, 5, 6, 8, 4, 5, 2, 1, 6, 8, 7, 9, 3, 3, 9, 6, 7, 2, 1, 8, 5, 4, 2, 7, 8, 4, 5, 9, 3, 1, 6, 1, 4, 5, 3, 8, 6, 9, 2, 7, 5, 6, 9, 8, 7, 4, 1, 3, 2, 8, 3, 1, 6, 9, 2, 4, 7, 5, 7, 2, 4, 5, 1, 3, 6, 8, 9] },\r\n  { puzzle: [6, 0, 0, 8, 3, 7, 0, 0, 1, 0, 8, 9, 0, 0, 4, 7, 0, 0, 1, 0, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 5, 0, 0, 2, 0, 0, 3, 0, 6, 0, 9, 0, 0, 5, 0, 4, 0, 0, 0, 0, 8, 6, 0, 9, 0, 8, 0, 0, 6, 0, 7, 0, 7, 0, 0, 0, 9, 8, 0, 1, 0, 0, 0, 5, 1, 0, 0, 9, 3, 0], solution: [6, 5, 4, 8, 3, 7, 2, 9, 1, 3, 8, 9, 2, 1, 4, 7, 5, 6, 1, 7, 2, 9, 6, 5, 4, 8, 3, 8, 9, 6, 4, 5, 1, 3, 2, 7, 2, 3, 7, 6, 8, 9, 1, 4, 5, 5, 4, 1, 7, 2, 3, 8, 6, 9, 9, 1, 8, 3, 4, 6, 5, 7, 2, 7, 2, 3, 5, 9, 8, 6, 1, 4, 4, 6, 5, 1, 7, 2, 9, 3, 8] },\r\n  { puzzle: [0, 0, 0, 0, 6, 7, 4, 3, 0, 8, 0, 0, 0, 0, 9, 1, 5, 0, 5, 0, 0, 0, 0, 3, 0, 0, 9, 0, 0, 7, 0, 0, 0, 0, 1, 0, 0, 0, 1, 8, 0, 6, 3, 0, 4, 9, 4, 0, 3, 5, 0, 0, 2, 0, 0, 0, 9, 0, 1, 0, 5, 0, 2, 6, 0, 8, 2, 0, 0, 7, 0, 0, 4, 0, 0, 7, 0, 8, 0, 0, 0], solution: [1, 9, 2, 5, 6, 7, 4, 3, 8, 8, 7, 3, 4, 2, 9, 1, 5, 6, 5, 6, 4, 1, 8, 3, 2, 7, 9, 3, 8, 7, 9, 4, 2, 6, 1, 5, 2, 5, 1, 8, 7, 6, 3, 9, 4, 9, 4, 6, 3, 5, 1, 8, 2, 7, 7, 3, 9, 6, 1, 4, 5, 8, 2, 6, 1, 8, 2, 9, 5, 7, 4, 3, 4, 2, 5, 7, 3, 8, 9, 6, 1] },\r\n];\r\nexport { puzzles }","import React from 'react';\r\nimport './App.css';\r\nimport { makeGivens, bruteForce, /*checkUpdate,*/ smartBruteForce } from './sudoku.ts';\r\nimport { puzzles } from './data.js';\r\n\r\nconst classNames = obj => {\r\n  let str = '';\r\n  for (let property in obj) {\r\n    if (obj[property]) {\r\n      str += property + ' ';\r\n    }\r\n  }\r\n  return str;\r\n}\r\n\r\nconst NoteSquare = props => (\r\n  <div\r\n    className={classNames({\r\n      'cell': true,\r\n      'show': !props.show,\r\n    })}\r\n    key={props.val}>\r\n    {props.val}\r\n  </div>\r\n);\r\n\r\nclass Square extends React.Component {\r\n\r\n  renderNotes() {\r\n    let notes = [];\r\n    for (let i = 1; i < 10; i++) {\r\n      notes.push(<NoteSquare val={i} show={this.props.notes[i - 1]} />)\r\n    }\r\n    return <div className=\"grid\">{notes}</div>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <td\r\n        className={classNames({\r\n          'square-selected': this.props.selected,\r\n          'incorrect': this.props.value !== this.props.solution,\r\n          'given': this.props.given,\r\n        })}\r\n        onClick={this.props.onClick}\r\n        key={this.props.val}>\r\n        {this.props.value === 0 ? this.renderNotes() : this.props.value}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        given={this.props.givens.has(i)}\r\n        solution={this.props.solution[i]}\r\n        selected={this.props.selected === i}\r\n        notes={this.props.notes[i]}\r\n        onClick={() => this.props.squareClick(i)}\r\n        val={i} />\r\n    );\r\n  }\r\n\r\n  makeRows() {\r\n    const rows = [];\r\n    for (var i = 0; i < 9; i++) {\r\n      const row = [];\r\n      for (var j = 0; j < 9; j++) {\r\n        row.push(this.renderSquare(i * 9 + j));\r\n      }\r\n      rows.push(<tr key={i}>{row}</tr>);\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <table className=\"board\">\r\n          <tbody>\r\n            {this.makeRows()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let notes = Array(81).fill(null);\r\n    for (let i = 0; i < 81; i++) {\r\n      notes[i] = Array(9).fill(false);\r\n    }\r\n    const choice = Math.floor(Math.random() * puzzles.length);\r\n    /**\r\n     * History is represented as list of objects {notes: true/false, index: index, num: current number/ list (notes), old: old number}\r\n     */\r\n    this.state = {\r\n      history: [],\r\n      puzzle: puzzles[choice].puzzle.slice(),\r\n      givens: makeGivens(puzzles[choice].puzzle),\r\n      solution: puzzles[choice].solution,\r\n      puzzleNum: choice,\r\n      notes: this.emptyNotes(),\r\n      selected: 0,\r\n      stepNumber: 0,\r\n      noteMode: false,\r\n    };\r\n    this.keyIn = this.keyIn.bind(this);\r\n  }\r\n\r\n  emptyNotes() {\r\n    let notes = Array(81).fill(null);\r\n    for (let i = 0; i < 81; i++) {\r\n      notes[i] = Array(9).fill(false);\r\n    }\r\n    return notes;\r\n  }\r\n\r\n  solveSteps(algorithm) {\r\n    const solved = algorithm(this.state.puzzle.slice(),\r\n      this.state.givens)\r\n    if (solved === null) {\r\n      return;\r\n    }\r\n    console.log('steps: ' + solved.steps.length);\r\n    this.setState(state => ({\r\n      history: state.history.concat(solved.steps),\r\n      solution: solved.solution,\r\n      selected: null,\r\n    }));\r\n    setTimeout(() => {\r\n      let i = 0;\r\n      let playback = setInterval(() => {\r\n        this.setState(state => {\r\n          const history = state.history[i];\r\n          state.puzzle[history.index] = history.num;\r\n          return {\r\n            stepNumber: i + 1,\r\n          }\r\n        });\r\n        i++;\r\n        if (i === this.state.history.length) {\r\n          clearInterval(playback);\r\n        }\r\n      }, 1)\r\n    }, 100);\r\n  }\r\n\r\n  squareClick(i) {\r\n    this.setState({\r\n      selected: i,\r\n    });\r\n  }\r\n\r\n  keyIn(e) {\r\n    if (!e) {\r\n      return;\r\n    } else if (e.code === 'Space') {\r\n      this.notesClick();\r\n    } else {\r\n      this.setState(state => {\r\n        if (!isNaN(parseInt(e.key)) && e.code !== 'Digit0' && !state.givens.has(state.selected)) {\r\n          const num = parseInt(e.key);\r\n          if (state.noteMode) {\r\n            state.notes[state.selected][num - 1] = !state.notes[state.selected][num - 1];\r\n            return {\r\n              history: state.history.concat([{ notes: true, index: state.selected, num: [num], }]),\r\n              stepNumber: state.stepNumber + 1,\r\n            };\r\n          } else {\r\n            if (state.puzzleNum < 0) state.givens.add(state.selected);\r\n            const old = state.puzzle[state.selected];\r\n            state.puzzle[state.selected] = num;\r\n            return {\r\n              history: state.history.concat([{ notes: false, index: state.selected, num: num, old: old }]),\r\n              stepNumber: state.stepNumber + 1,\r\n            };\r\n          }\r\n        } else if (e.key === 'Backspace') {\r\n          if (!state.givens.has(state.selected) || state.puzzleNum < 0) {\r\n            if (state.puzzle[state.selected] === 0) {\r\n              const nums = [];\r\n              for (let i = 0; i < 9; i++) {\r\n                if (state.notes[state.selected][i]) nums.push(i + 1);\r\n              }\r\n              state.notes[state.selected] = Array(9).fill(false);\r\n              return {\r\n                history: state.history.concat([{ notes: true, index: state.selected, num: nums, }]),\r\n                stepNumber: state.stepNumber + 1,\r\n              };\r\n            } else {\r\n              state.givens.delete(state.selected);\r\n              const old = state.puzzle[state.selected];\r\n              state.puzzle[state.selected] = 0;\r\n              return {\r\n                history: state.history.concat([{ notes: false, index: state.selected, num: 0, old: old }]),\r\n                stepNumber: state.stepNumber + 1,\r\n              };\r\n            }\r\n          }\r\n        } else if (e.key === 'ArrowRight') {\r\n          if (state.selected % 9 !== 8) {\r\n            return {\r\n              selected: state.selected + 1,\r\n            }\r\n          }\r\n          return {};\r\n        } else if (e.key === 'ArrowLeft') {\r\n          if (state.selected % 9 !== 0) {\r\n            return {\r\n              selected: state.selected - 1,\r\n            }\r\n          }\r\n          return {};\r\n        } else if (e.key === 'ArrowUp') {\r\n          if (Math.floor(state.selected / 9) !== 0) {\r\n            return {\r\n              selected: state.selected - 9,\r\n            }\r\n          }\r\n          return {};\r\n        } else if (e.key === 'ArrowDown') {\r\n          if (Math.floor(state.selected / 9) !== 8) {\r\n            return {\r\n              selected: state.selected + 9,\r\n            }\r\n          }\r\n          return {};\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  undoClick() {\r\n    this.setState(state => {\r\n      if (state.stepNumber === 0) return;\r\n      const newStep = state.stepNumber - 1;\r\n      const hist = state.history[newStep];\r\n      if (hist.notes) {\r\n        for (let i of hist.num) {\r\n          state.notes[hist.index][i - 1] = !state.notes[hist.index][i - 1];\r\n        }\r\n      } else {\r\n        if (state.puzzleNum < 0 && hist.old === 0) state.givens.delete(hist.index);\r\n        console.log(hist.old);\r\n        state.puzzle[hist.index] = hist.old;\r\n      }\r\n      return {\r\n        stepNumber: newStep,\r\n        history: state.history.slice(0, newStep),\r\n      }\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.setState(state => {\r\n      if (state.puzzleNum < 0) {\r\n        const puzzle = Array(81).fill(0);\r\n        for (let i of state.givens.keys()) {\r\n          puzzle[i] = state.puzzle[i];\r\n        }\r\n        return {\r\n          history: [],\r\n          puzzle: puzzle,\r\n          solution: puzzle,\r\n          puzzleNum: -1,\r\n          notes: this.emptyNotes(),\r\n          selected: 0,\r\n          stepNumber: 0,\r\n          noteMode: false,\r\n        }\r\n      } else {\r\n        return {\r\n          history: [],\r\n          puzzle: puzzles[state.puzzleNum].puzzle.slice(),\r\n          notes: this.emptyNotes(),\r\n          selected: 0,\r\n          stepNumber: 0,\r\n          noteMode: false,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  notesClick() {\r\n    this.setState(state => ({\r\n      noteMode: !state.noteMode\r\n    }));\r\n  }\r\n\r\n  randomPuzzle() {\r\n    const choice = Math.floor(Math.random() * puzzles.length);\r\n    this.setState(state => ({\r\n      history: [],\r\n      puzzle: puzzles[choice].puzzle.slice(),\r\n      givens: makeGivens(puzzles[choice].puzzle),\r\n      solution: puzzles[choice].solution,\r\n      puzzleNum: choice,\r\n      notes: this.emptyNotes(),\r\n      selected: 0,\r\n      stepNumber: 0,\r\n      noteMode: false,\r\n    }))\r\n  }\r\n\r\n  clear() {\r\n    this.setState(state => {\r\n      const puzzle = Array(81).fill(0);\r\n      return {\r\n        history: [],\r\n        puzzle: puzzle,\r\n        givens: new Set(),\r\n        solution: puzzle,\r\n        puzzleNum: -1,\r\n        notes: this.emptyNotes(),\r\n        selected: 0,\r\n        stepNumber: 0,\r\n        noteMode: false,\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.keyIn);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.keyIn);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={this.state.puzzle}\r\n            solution={\r\n              this.state.puzzleNum === -1 ? this.state.solution :\r\n                puzzles[this.state.puzzleNum].solution}\r\n            givens={this.state.givens}\r\n            selected={this.state.selected}\r\n            notes={this.state.notes}\r\n            squareClick={(i) => this.squareClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <button\r\n            className=\"undo\"\r\n            onClick={() => this.undoClick()}>\r\n            Undo\r\n        </button>\r\n          <button\r\n            className=\"reset\"\r\n            onClick={() => this.reset()}>\r\n            Reset\r\n        </button>\r\n          <button\r\n            className=\"notes\"\r\n            onClick={() => this.notesClick()}>\r\n            Notes\r\n        </button>\r\n          <button\r\n            className=\"random\"\r\n            onClick={() => this.randomPuzzle()}>\r\n            Random Puzzle\r\n        </button>\r\n          <button\r\n            className=\"clear\"\r\n            onClick={() => this.clear()}>\r\n            Clear\r\n        </button>\r\n          <button\r\n            className=\"solvebf\"\r\n            onClick={() => this.solveSteps(bruteForce)}>\r\n            Solve Brute Force\r\n        </button>\r\n          <button\r\n            className=\"solvesmart\"\r\n            onClick={() => this.solveSteps(smartBruteForce)}>\r\n            Smart Brute Force\r\n        </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}